{"ast":null,"code":"const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: action.payload\n      };\n\n    case \"FOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          followings: [...state.user.followings, action.payload]\n        }\n      };\n\n    case \"UNFOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          followings: state.user.followings.filter(following => following !== action.payload)\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["C:/Users/musli/Desktop/mern MusaSocial/React/src/context/AuthReducer.js"],"names":["AuthReducer","state","action","type","user","isFetching","error","payload","followings","filter","following"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAM;AACFC,QAAAA,IAAI,EAAE,IADJ;AAEFC,QAAAA,UAAU,EAAE,IAFV;AAGFC,QAAAA,KAAK,EAAE;AAHL,OAAN;;AAKJ,SAAK,eAAL;AACI,aAAM;AACFF,QAAAA,IAAI,EAAEF,MAAM,CAACK,OADX;AAEFF,QAAAA,UAAU,EAAE,KAFV;AAGFC,QAAAA,KAAK,EAAE;AAHL,OAAN;;AAKJ,SAAK,eAAL;AACI,aAAM;AACFF,QAAAA,IAAI,EAAE,IADJ;AAEFC,QAAAA,UAAU,EAAE,KAFV;AAGFC,QAAAA,KAAK,EAAEJ,MAAM,CAACK;AAHZ,OAAN;;AAKJ,SAAK,QAAL;AACI,aAAM,EACF,GAAGN,KADD;AAEFG,QAAAA,IAAI,EAAE,EACF,GAAGH,KAAK,CAACG,IADP;AAEFI,UAAAA,UAAU,EAAE,CAAC,GAAGP,KAAK,CAACG,IAAN,CAAWI,UAAf,EAA2BN,MAAM,CAACK,OAAlC;AAFV;AAFJ,OAAN;;AAOA,SAAK,UAAL;AACA,aAAM,EACF,GAAGN,KADD;AAEFG,QAAAA,IAAI,EAAE,EACF,GAAGH,KAAK,CAACG,IADP;AAEFI,UAAAA,UAAU,EAAEP,KAAK,CAACG,IAAN,CAAWI,UAAX,CAAsBC,MAAtB,CAA8BC,SAAD,IAAeA,SAAS,KAAKR,MAAM,CAACK,OAAjE;AAFV;AAFJ,OAAN;;AAQJ;AACI,aAAON,KAAP;AArCR;AAuCH,CAxCD;;KAAMD,W;AA0CN,eAAeA,WAAf","sourcesContent":["const AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_START\":\r\n            return{\r\n                user: null,\r\n                isFetching: true,\r\n                error: false,\r\n            };\r\n        case \"LOGIN_SUCCESS\":\r\n            return{\r\n                user: action.payload,\r\n                isFetching: false,\r\n                error: false,\r\n            };\r\n        case \"LOGIN_FAILURE\":\r\n            return{\r\n                user: null,\r\n                isFetching: false,\r\n                error: action.payload,\r\n            };\r\n        case \"FOLLOW\":\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    followings: [...state.user.followings, action.payload]\r\n                },\r\n            };\r\n            case \"UNFOLLOW\":\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    followings: state.user.followings.filter((following) => following !== action.payload\r\n                    ),\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AuthReducer;"]},"metadata":{},"sourceType":"module"}