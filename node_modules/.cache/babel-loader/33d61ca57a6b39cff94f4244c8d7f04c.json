{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musli\\\\Desktop\\\\mern MusaSocial\\\\React\\\\src\\\\components\\\\chatOnline\\\\ChatOnline.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./chatonline.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatOnline({\n  onlineusers,\n  currentId,\n  setcurrentChat\n}) {\n  _s();\n\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [friends, setfriends] = useState(null);\n  const [onlineFriends, setonlineFriends] = useState([]);\n  useEffect(() => {\n    const getFriends = async () => {\n      try {\n        const res = await axios.get(\"/users/friends/\" + currentId);\n        setfriends(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getFriends();\n  }, [currentId]);\n\n  const handleClick = async userr => {\n    try {\n      const res = await axios.get(`/conversations/find/${currentId}/${userr._id}`);\n      console.log(res);\n      setcurrentChat(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setonlineFriends([]);\n\n    for (let index = 0; index < onlineusers.length; index++) {\n      for (let i = 0; i < (friends === null || friends === void 0 ? void 0 : friends.length); i++) {\n        if (onlineusers[index] === friends[i]._id) {\n          setonlineFriends([...onlineFriends, friends[i]]);\n        }\n      }\n    }\n  }, [friends, onlineusers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatOnline\",\n    children: onlineFriends === null || onlineFriends === void 0 ? void 0 : onlineFriends.map(use => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatOnlineFriend\",\n      onClick: () => handleClick(use),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnlineImgContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"chatOnlineImg\",\n          src: PF + (use === null || use === void 0 ? void 0 : use.profilePicture),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineBadge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatOnlineName\",\n        children: use === null || use === void 0 ? void 0 : use.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatOnline, \"M+CLaOtO1g7JVcsIS9dAwW7F7Ho=\");\n\n_c = ChatOnline;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatOnline\");","map":{"version":3,"sources":["C:/Users/musli/Desktop/mern MusaSocial/React/src/components/chatOnline/ChatOnline.jsx"],"names":["axios","useEffect","useState","ChatOnline","onlineusers","currentId","setcurrentChat","PF","process","env","REACT_APP_PUBLIC_FOLDER","friends","setfriends","onlineFriends","setonlineFriends","getFriends","res","get","data","error","console","log","handleClick","userr","_id","index","length","i","map","use","profilePicture","username"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./chatonline.css\"\r\n\r\nexport default function ChatOnline({onlineusers, currentId, setcurrentChat}) {\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const [friends, setfriends] = useState(null)\r\n    const [onlineFriends, setonlineFriends] = useState([])\r\n    useEffect(() => {\r\n        const getFriends = async () =>{\r\n            try {\r\n                const res = await axios.get(\"/users/friends/\" + currentId)\r\n                setfriends(res.data)\r\n            } \r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getFriends();\r\n        \r\n    }, [currentId])\r\n\r\n    const handleClick = async (userr) => {\r\n        try {\r\n            const res = await axios.get(`/conversations/find/${currentId}/${userr._id}`)\r\n            console.log(res)\r\n            setcurrentChat(res.data)\r\n        } \r\n        catch (error) {\r\n           console.log(error) \r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setonlineFriends([]);\r\n        for (let index = 0; index < onlineusers.length; index++) {\r\n            for (let i = 0; i < friends?.length; i++) {\r\n                if (onlineusers[index] === friends[i]._id) {\r\n                \r\n                    setonlineFriends([...onlineFriends, friends[i]])\r\n                }\r\n            }\r\n        }\r\n    }, [friends, onlineusers])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chatOnline\">\r\n            {onlineFriends?.map((use) => (\r\n                <div className=\"chatOnlineFriend\" onClick={() => handleClick(use)}>\r\n                <div className=\"chatOnlineImgContainer\">\r\n                    <img className=\"chatOnlineImg\" src={PF + use?.profilePicture} alt=\"\" />\r\n                    <div className=\"chatOnlineBadge\"></div>\r\n                </div>\r\n                <span className=\"chatOnlineName\">{use?.username}</span>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}