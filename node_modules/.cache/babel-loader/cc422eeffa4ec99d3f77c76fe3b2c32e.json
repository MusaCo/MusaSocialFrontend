{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musli\\\\Desktop\\\\mern MusaSocial\\\\React\\\\src\\\\pages\\\\messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport './messenger.css';\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversation/Conversation\";\nimport Message from \"../../components/Message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useState, useEffect, useRef } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [conversations, setconversations] = useState([]);\n  const [currentChat, setcurrentChat] = useState(null);\n  const [newMessage, setnewMessage] = useState(null);\n  const [messages, setmessages] = useState(null);\n  const [arrivalMessage, setarrivalMessage] = useState(null);\n  const [onlineUsers, setonlineUsers] = useState([]);\n  const Socket = useRef();\n  const scrollRef = useRef();\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(\"/conversations/\" + user._id);\n        setconversations(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    Socket.current = io(\"ws://localhost:8900\");\n    Socket.current.on(\"getMessage\", data => {\n      setarrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        createdAt: Date.now()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    Socket.current.emit(\"addUser\", user._id);\n    Socket.current.on(\"getUsers\", users => setonlineUsers(user.followings.filter(f => users.some(u => u.userId === f))));\n  }, [user]);\n  useEffect(() => {\n    arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setmessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n        setmessages(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMessages();\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== user._id);\n    Socket.current.emit(\"sendMessage\", {\n      senderId: user._id,\n      receiverId: receiverId,\n      text: newMessage\n    });\n    setnewMessage(\"\");\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setmessages([...messages, res.data]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for Friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            onClick: () => setcurrentChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  own: (m === null || m === void 0 ? void 0 : m.sender) === user._id,\n                  message: m\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Write Something...\",\n                className: \"chatMessageInput\",\n                onChange: e => setnewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a Convo to start Chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineusers: onlineUsers,\n            currentId: user._id,\n            setcurrentChat: setcurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"Hkysd1/sM/TXvOktPRasbRWGTPE=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/musli/Desktop/mern MusaSocial/React/src/pages/messenger/Messenger.jsx"],"names":["Topbar","Conversation","Message","ChatOnline","useContext","useState","useEffect","useRef","AuthContext","axios","io","Messenger","conversations","setconversations","currentChat","setcurrentChat","newMessage","setnewMessage","messages","setmessages","arrivalMessage","setarrivalMessage","onlineUsers","setonlineUsers","Socket","scrollRef","user","getConversations","res","get","_id","data","error","console","log","current","on","sender","senderId","text","createdAt","Date","now","emit","users","followings","filter","f","some","u","userId","members","includes","prev","getMessages","handleSubmit","e","preventDefault","message","conversationId","receiverId","find","member","post","scrollIntoView","behavior","map","c","m","target","value"],"mappings":"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","sourcesContent":["import './messenger.css'\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useState, useEffect, useRef } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport axios from \"axios\"\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport default function Messenger() {\r\n    const [conversations, setconversations] = useState([])\r\n    const [currentChat, setcurrentChat] = useState(null)\r\n    const [newMessage, setnewMessage] = useState(null)\r\n    const [messages, setmessages] = useState(null)\r\n    const [arrivalMessage, setarrivalMessage] = useState(null)\r\n    const [onlineUsers, setonlineUsers] = useState([])\r\n    const Socket = useRef()\r\n    const scrollRef = useRef()\r\n    const{user} = useContext(AuthContext);\r\n    useEffect(() => {\r\n        const getConversations = async () =>{\r\n            try {\r\n                const res = await axios.get(\"/conversations/\" + user._id)\r\n                setconversations(res.data)\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getConversations();\r\n        \r\n    }, [user._id])\r\n\r\n    useEffect(() => {\r\n        Socket.current = io(\"ws://localhost:8900\");\r\n        Socket.current.on(\"getMessage\", data => {\r\n            setarrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now(),\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Socket.current.emit(\"addUser\", user._id)\r\n        Socket.current.on(\"getUsers\", (users) => setonlineUsers(user.followings.filter((f) => users.some((u) => u.userId === f))))\r\n    }, [user])\r\n    useEffect(() => {\r\n        arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) && setmessages((prev) => [...prev, arrivalMessage])\r\n    }, [arrivalMessage, currentChat])\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () =>{\r\n            try {\r\n                const res = await axios.get(\"/messages/\" + currentChat?._id)\r\n                setmessages(res.data)\r\n            } \r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getMessages();\r\n\r\n    },[currentChat])\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: user._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        }\r\n        \r\n        const receiverId = currentChat.members.find(member => member !== user._id)\r\n        Socket.current.emit(\"sendMessage\", \r\n        {   \r\n            senderId: user._id, \r\n            receiverId: receiverId, \r\n            text: newMessage\r\n        })\r\n        setnewMessage(\"\");\r\n        try {\r\n            const res = await axios.post(\"/messages\", message)\r\n            setmessages([...messages , res.data])\r\n        } \r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({behavior: \"smooth\"})\r\n    }, [messages])\r\n    return (\r\n        <>\r\n        <Topbar/>\r\n        <div className=\"messenger\">\r\n            <div className=\"chatMenu\">\r\n                <div className=\"chatMenuWrapper\">\r\n                    <input placeholder=\"Search for Friends\" className=\"chatMenuInput\" />\r\n                    {\r\n                        conversations.map((c) => (\r\n                            <div className=\"\" onClick={() => setcurrentChat(c)}>\r\n                                <Conversation conversation={c} currentUser={user}/>\r\n                            </div>\r\n                            \r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"chatBox\">\r\n                <div className=\"chatBoxWrapper\">\r\n                    {\r\n                        currentChat?<><div className=\"chatBoxTop\">\r\n                            \r\n                        {\r\n                            messages.map((m) => (\r\n                                <div ref={scrollRef}>\r\n                                    <Message own={m?.sender === user._id} message={m} />\r\n                                </div>\r\n                                \r\n                            ))\r\n                        }\r\n                        \r\n                    </div>\r\n                    <div className=\"chatBoxBottom\">\r\n                    <textarea placeholder=\"Write Something...\" className=\"chatMessageInput\" onChange={(e) => setnewMessage(e.target.value)} value={newMessage}></textarea>\r\n                    <button className=\"chatSubmitButton\" onClick={handleSubmit}>Send</button>\r\n                    </div>\r\n                    </>\r\n                    : <span className=\"noConversationText\">Open a Convo to start Chatting</span>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineWrapper\">\r\n                    <ChatOnline onlineusers={onlineUsers} currentId={user._id} setcurrentChat={setcurrentChat}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}