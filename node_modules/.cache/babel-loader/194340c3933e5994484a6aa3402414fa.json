{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musli\\\\Desktop\\\\mern MusaSocial\\\\React\\\\src\\\\pages\\\\messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport './messenger.css';\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Conversation from \"../../components/conversation/Conversation\";\nimport Message from \"../../components/Message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\nimport { useContext, useState, useEffect, useRef } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  _s();\n\n  const [conversations, setconversations] = useState([]);\n  const [currentChat, setcurrentChat] = useState(null);\n  const [newMessage, setnewMessage] = useState(null);\n  const [messages, setmessages] = useState(null);\n  const [arrivalMessage, setarrivalMessage] = useState(null);\n  const [onlineUsers, setonlineUsers] = useState([]);\n  const Socket = useRef();\n  const scrollRef = useRef();\n  const [isLoggedin, setisLoggedin] = useState(true);\n  const {\n    user,\n    isFetching,\n    error,\n    dispatch\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const checkifLoggedin = async () => {\n      dispatch({\n        type: \"LOGIN_START\"\n      });\n\n      try {\n        const res = await axios.get(\"/auth/login\");\n\n        if (res.data.Loggedin === true) {\n          setisLoggedin(true);\n          dispatch({\n            type: \"LOGIN_SUCCESS\",\n            payload: res.data.message\n          });\n        } else {\n          setisLoggedin(false);\n        }\n      } catch (error) {\n        setisLoggedin(false);\n        dispatch({\n          type: \"LOGIN_FAILURE\",\n          payload: error\n        });\n      }\n    };\n\n    checkifLoggedin();\n  }, []);\n  useEffect(() => {\n    if (isLoggedin) {\n      const getConversations = async () => {\n        try {\n          const res = await axios.get(\"/conversations/\" + (user === null || user === void 0 ? void 0 : user._id));\n          setconversations(res.data);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      getConversations();\n    }\n  }, [user === null || user === void 0 ? void 0 : user._id]);\n  useEffect(() => {\n    if (isLoggedin) {\n      Socket.current = io(\"ws://localhost:8900\");\n      Socket.current.on(\"getMessage\", data => {\n        setarrivalMessage({\n          sender: data.senderId,\n          text: data.text,\n          createdAt: Date.now()\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (isLoggedin && user._id !== null) {\n      Socket.current.emit(\"addUser\", user === null || user === void 0 ? void 0 : user._id);\n      Socket.current.on(\"getUsers\", users => {\n        setonlineUsers(user === null || user === void 0 ? void 0 : user.followings.filter(f => users.some(u => u.userId === f)));\n        console.log(users);\n      });\n      console.log(\"it didddddddddddd\");\n    }\n  }, [user]);\n  useEffect(() => {\n    if (isLoggedin) {\n      arrivalMessage && (currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) && setmessages(prev => [...prev, arrivalMessage]);\n    }\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    if (isLoggedin) {\n      const getMessages = async () => {\n        try {\n          const res = await axios.get(\"/messages/\" + (currentChat === null || currentChat === void 0 ? void 0 : currentChat._id));\n          setmessages(res.data);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      getMessages();\n    }\n  }, [currentChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: user === null || user === void 0 ? void 0 : user._id,\n      text: newMessage,\n      conversationId: currentChat._id\n    };\n    const receiverId = currentChat.members.find(member => member !== (user === null || user === void 0 ? void 0 : user._id));\n    Socket.current.emit(\"sendMessage\", {\n      senderId: user === null || user === void 0 ? void 0 : user._id,\n      receiverId: receiverId,\n      text: newMessage\n    });\n    setnewMessage(\"\");\n\n    try {\n      const res = await axios.post(\"/messages\", message);\n      setmessages([...messages, res.data]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  if (!isLoggedin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for Friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this), conversations.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            onClick: () => setcurrentChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              conversation: c,\n              currentUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  own: (m === null || m === void 0 ? void 0 : m.sender) === (user === null || user === void 0 ? void 0 : user._id),\n                  message: m\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Write Something...\",\n                className: \"chatMessageInput\",\n                onChange: e => setnewMessage(e.target.value),\n                value: newMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a Convo to start Chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {\n            onlineusers: onlineUsers,\n            currentId: user === null || user === void 0 ? void 0 : user._id,\n            setcurrentChat: setcurrentChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"s+uqVVVL82/yzV474ovMRH0vnRU=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/musli/Desktop/mern MusaSocial/React/src/pages/messenger/Messenger.jsx"],"names":["Topbar","Conversation","Message","ChatOnline","useContext","useState","useEffect","useRef","AuthContext","axios","io","Redirect","Messenger","conversations","setconversations","currentChat","setcurrentChat","newMessage","setnewMessage","messages","setmessages","arrivalMessage","setarrivalMessage","onlineUsers","setonlineUsers","Socket","scrollRef","isLoggedin","setisLoggedin","user","isFetching","error","dispatch","checkifLoggedin","type","res","get","data","Loggedin","payload","message","getConversations","_id","console","log","current","on","sender","senderId","text","createdAt","Date","now","emit","users","followings","filter","f","some","u","userId","members","includes","prev","getMessages","handleSubmit","e","preventDefault","conversationId","receiverId","find","member","post","scrollIntoView","behavior","map","c","m","target","value"],"mappings":"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","sourcesContent":["import './messenger.css'\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useState, useEffect, useRef } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport axios from \"axios\"\r\nimport { io } from \"socket.io-client\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Messenger() {\r\n    const [conversations, setconversations] = useState([])\r\n    const [currentChat, setcurrentChat] = useState(null)\r\n    const [newMessage, setnewMessage] = useState(null)\r\n    const [messages, setmessages] = useState(null)\r\n    const [arrivalMessage, setarrivalMessage] = useState(null)\r\n    const [onlineUsers, setonlineUsers] = useState([])\r\n    const Socket = useRef()\r\n    const scrollRef = useRef()\r\n    const [isLoggedin, setisLoggedin] = useState(true)\r\n    const{user, isFetching, error, dispatch} = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            dispatch({type: \"LOGIN_START\"});\r\n            try {\r\n                const res = await axios.get(\"/auth/login\");\r\n                if (res.data.Loggedin === true) {\r\n                    setisLoggedin(true)\r\n                    dispatch({type: \"LOGIN_SUCCESS\", payload: res.data.message});\r\n                }\r\n                else{\r\n                    setisLoggedin(false);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setisLoggedin(false);\r\n                dispatch({type: \"LOGIN_FAILURE\", payload: error});    \r\n             }\r\n            }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const getConversations = async () =>{\r\n                try {\r\n                    const res = await axios.get(\"/conversations/\" + user?._id)\r\n                    setconversations(res.data)\r\n                }\r\n                catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            getConversations();\r\n        }\r\n        \r\n    }, [user?._id])\r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            Socket.current = io(\"ws://localhost:8900\");\r\n            Socket.current.on(\"getMessage\", data => {\r\n            setarrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now(),\r\n            })\r\n        })\r\n        }\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin && user._id !== null) {\r\n            Socket.current.emit(\"addUser\", user?._id)\r\n            Socket.current.on(\"getUsers\", (users) => {setonlineUsers(user?.followings.filter((f) => users.some((u) => u.userId === f))); console.log(users)})\r\n            console.log(\"it didddddddddddd\")\r\n        }\r\n        \r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) && setmessages((prev) => [...prev, arrivalMessage])\r\n        }\r\n    }, [arrivalMessage, currentChat])\r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const getMessages = async () =>{\r\n                try {\r\n                    const res = await axios.get(\"/messages/\" + currentChat?._id)\r\n                    setmessages(res.data)\r\n                } \r\n                catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            getMessages();\r\n        }\r\n        \r\n\r\n    },[currentChat])\r\n\r\n   \r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: user?._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        }\r\n        \r\n        const receiverId = currentChat.members.find(member => member !== user?._id)\r\n        Socket.current.emit(\"sendMessage\", \r\n        {   \r\n            senderId: user?._id, \r\n            receiverId: receiverId, \r\n            text: newMessage\r\n        })\r\n        setnewMessage(\"\");\r\n        try {\r\n            const res = await axios.post(\"/messages\", message)\r\n            setmessages([...messages , res.data])\r\n        } \r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({behavior: \"smooth\"})\r\n    }, [messages])\r\n\r\n    if (!isLoggedin) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Topbar/>\r\n        <div className=\"messenger\">\r\n            <div className=\"chatMenu\">\r\n                <div className=\"chatMenuWrapper\">\r\n                    <input placeholder=\"Search for Friends\" className=\"chatMenuInput\" />\r\n                    {\r\n                        conversations.map((c) => (\r\n                            <div className=\"\" onClick={() => setcurrentChat(c)}>\r\n                                <Conversation conversation={c} currentUser={user}/>\r\n                            </div>\r\n                            \r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"chatBox\">\r\n                <div className=\"chatBoxWrapper\">\r\n                    {\r\n                        currentChat?<><div className=\"chatBoxTop\">\r\n                            \r\n                        {\r\n                            messages.map((m) => (\r\n                                <div ref={scrollRef}>\r\n                                    <Message own={m?.sender === user?._id} message={m} />\r\n                                </div>\r\n                                \r\n                            ))\r\n                        }\r\n                        \r\n                    </div>\r\n                    <div className=\"chatBoxBottom\">\r\n                    <textarea placeholder=\"Write Something...\" className=\"chatMessageInput\" onChange={(e) => setnewMessage(e.target.value)} value={newMessage}></textarea>\r\n                    <button className=\"chatSubmitButton\" onClick={handleSubmit}>Send</button>\r\n                    </div>\r\n                    </>\r\n                    : <span className=\"noConversationText\">Open a Convo to start Chatting</span>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineWrapper\">\r\n                    <ChatOnline onlineusers={onlineUsers} currentId={user?._id} setcurrentChat={setcurrentChat}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}