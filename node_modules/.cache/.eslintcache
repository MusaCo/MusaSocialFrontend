[{"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\index.js":"1","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\App.js":"2","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthContext.js":"3","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthReducer.js":"4","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\home\\Home.jsx":"5","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\profile\\Profile.jsx":"6","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\login\\Login.jsx":"7","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\messenger\\Messenger.jsx":"8","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\register\\Register.jsx":"9","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\apiCalls.js":"10","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\rightbar\\Rightbar.jsx":"11","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\Message\\Message.jsx":"12","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\feed\\Feed.jsx":"13","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\topbar\\Topbar.jsx":"14","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\sidebar\\Sidebar.jsx":"15","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\chatOnline\\ChatOnline.jsx":"16","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\conversation\\Conversation.jsx":"17","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\online\\Online.jsx":"18","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\share\\Share.jsx":"19","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\closefriend\\CloseFriend.jsx":"20","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\post\\Post.jsx":"21"},{"size":330,"mtime":1623594842541,"results":"22","hashOfConfig":"23"},{"size":1877,"mtime":1624736495252,"results":"24","hashOfConfig":"23"},{"size":1133,"mtime":1624113645717,"results":"25","hashOfConfig":"23"},{"size":1213,"mtime":1623594842540,"results":"26","hashOfConfig":"23"},{"size":2405,"mtime":1624569294038,"results":"27","hashOfConfig":"23"},{"size":3385,"mtime":1624613768537,"results":"28","hashOfConfig":"23"},{"size":2670,"mtime":1624736917256,"results":"29","hashOfConfig":"23"},{"size":7634,"mtime":1624569294037,"results":"30","hashOfConfig":"23"},{"size":2317,"mtime":1623594842547,"results":"31","hashOfConfig":"23"},{"size":366,"mtime":1623594842526,"results":"32","hashOfConfig":"23"},{"size":6025,"mtime":1624740616251,"results":"33","hashOfConfig":"23"},{"size":611,"mtime":1623594842527,"results":"34","hashOfConfig":"23"},{"size":1235,"mtime":1624608458297,"results":"35","hashOfConfig":"23"},{"size":3855,"mtime":1624571717461,"results":"36","hashOfConfig":"23"},{"size":2695,"mtime":1623684953994,"results":"37","hashOfConfig":"23"},{"size":1963,"mtime":1624116139945,"results":"38","hashOfConfig":"23"},{"size":1002,"mtime":1624115100184,"results":"39","hashOfConfig":"23"},{"size":610,"mtime":1623594842533,"results":"40","hashOfConfig":"23"},{"size":4298,"mtime":1624571717461,"results":"41","hashOfConfig":"23"},{"size":370,"mtime":1623594842529,"results":"42","hashOfConfig":"23"},{"size":3745,"mtime":1624570530721,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"hsyip8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\index.js",[],["96","97"],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\App.js",["98","99","100"],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthContext.js",["101"],"import { createContext, useReducer, useEffect } from \"react\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nconst INITIAL_STATE = {\r\n    // user: {\r\n    //   // id: \"60bf7a234e5fd0849c910b16\",\r\n    //   // username: \"musmaro\",\r\n    //   // email: \"musamusk22@gmail.com\",\r\n    //   // profilePicture: \"7.jpg\",\r\n    //   // coverPicture: \"tesla.jpg\",\r\n    //   // followers: [],\r\n    //   // followings: [],\r\n    // },\r\n    \r\n    user: null, //JSON.parse(localStorage.getItem(\"user\")) || null,\r\n    isFetching: false,\r\n    error: false,\r\n};\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE);\r\n\r\nexport const AuthContextProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n    \r\n    // useEffect(()=>{\r\n    //   localStorage.setItem(\"user\", JSON.stringify(state.user))\r\n    // },[state.user])\r\n\r\n    return (\r\n        <AuthContext.Provider \r\n          value={{\r\n            user: state.user,\r\n            isFetching: state.isFetching,\r\n            error:state.error,\r\n            dispatch,\r\n          }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthReducer.js",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\home\\Home.jsx",["102","103"],"import Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport \"./home.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Home() {\r\n    const [isLoggedin, setisLoggedin] = useState(true)\r\n    const [user, setuser] = useState(null)\r\n    //const{user, isFetching, error, dispatch} = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            // dispatch({type: \"LOGIN_START\"});\r\n            // try {\r\n            //     const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\");\r\n                // if (res.data.Loggedin === true) {\r\n                //     setisLoggedin(true)\r\n                //     dispatch({type: \"LOGIN_SUCCESS\", payload: res.data.message});\r\n                // }\r\n            //     else{\r\n            //         setisLoggedin(false);\r\n            //     }\r\n            // } \r\n            // catch (error) {\r\n            //     setisLoggedin(false);\r\n            //     dispatch({type: \"LOGIN_FAILURE\", payload: error});    \r\n            //  }\r\n            try {\r\n                const accesstoken = localStorage.getItem(\"accesstoken\")\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\", {\r\n                    headers: {\r\n                        authorization: \"Bearer \" + accesstoken\r\n                    }\r\n                });\r\n                if (res.data.Loggedin === true) {\r\n                    setuser(res.data.message.user)\r\n                    setisLoggedin(true)\r\n                }\r\n                else{\r\n                    setisLoggedin(false);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setisLoggedin(false);\r\n             }\r\n        }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    if (!isLoggedin) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Topbar/>\r\n        <div className=\"homeContainer\">\r\n            <Sidebar/>\r\n            <Feed user={user}/>\r\n            <Rightbar/>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\profile\\Profile.jsx",["104","105","106"],"import \"./profile.css\"\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport { useEffect, useState, useContext} from \"react\"\r\nimport  axios  from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Profile() {\r\n    const [user, setUser] = useState()\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const params = useParams().username;\r\n    const [isLoggedin, setisLoggedin] = useState(true)\r\n    //const{dispatch} = useContext(AuthContext);\r\n    \r\n    \r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            try {\r\n                const accesstoken = localStorage.getItem(\"accesstoken\")\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\", {\r\n                    headers: {\r\n                        authorization: \"Bearer \" + accesstoken\r\n                    }\r\n                });\r\n                if (res.data.Loggedin === true) {\r\n                    setisLoggedin(true)\r\n                    //setUser(res.data.message.user)\r\n                }\r\n                else{\r\n                    setisLoggedin(false);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setisLoggedin(false);\r\n             }\r\n            }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const fetchUser = async () =>{\r\n                const result = await axios.get(`https://musasocialapi.herokuapp.com/users?username=${params}`);\r\n                setUser(result.data)\r\n            };\r\n            fetchUser();\r\n        }\r\n    }, [params])\r\n\r\n    if (!isLoggedin) {\r\n        return  <Redirect to=\"/login\" />\r\n    }\r\n\r\n    if (user) {\r\n        return(\r\n            <>\r\n        <Topbar/>\r\n        <div className=\"profile\">\r\n            <Sidebar/>\r\n            <div className=\"profileRight\">\r\n                <div className=\"profileRightTop\">\r\n                    <div className=\"profileCover\">\r\n                        <img src={user.coverPicture? PF + user.coverPicture : PF + \"nopfp.jpg\"} alt=\"\" className=\"profileCoverImg\" />\r\n                        <img src={user.profilePicture? PF + user.profilePicture : PF + \"nopfp.jpg\"} alt=\"\" className=\"profileUserImg\" />\r\n                    </div>\r\n                    <div className=\"profileInfo\">\r\n                        <h4 className=\"profileInfoName\">{user?.username}</h4>\r\n                        <span className=\"profileInfoDesc\">{user?.desc}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profileRightBottom\">\r\n                    <Feed username={user?.username}/>\r\n                    <Rightbar user={user}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n        )\r\n        \r\n    } else {\r\n        return (\r\n                <div className=\"\">\r\n                    <Topbar/>\r\n                    <div className=\"usernotFoundParent\">\r\n                        <h4 className=\"usernotFound\">User Not Found!!</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n    \r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\login\\Login.jsx",["107","108","109","110"],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\messenger\\Messenger.jsx",["111","112","113","114","115","116","117"],"import './messenger.css'\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useState, useEffect, useRef } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport axios from \"axios\"\r\nimport { io } from \"socket.io-client\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Messenger() {\r\n    const [conversations, setconversations] = useState([])\r\n    const [currentChat, setcurrentChat] = useState(null)\r\n    const [newMessage, setnewMessage] = useState(null)\r\n    const [messages, setmessages] = useState(null)\r\n    const [arrivalMessage, setarrivalMessage] = useState(null)\r\n    const [onlineUsers, setonlineUsers] = useState([])\r\n    const Socket = useRef()\r\n    const scrollRef = useRef()\r\n    const [isLoggedin, setisLoggedin] = useState(true)\r\n    // const{user, dispatch} = useContext(AuthContext);\r\n    const [user, setuser] = useState(null)\r\n    \r\n    \r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            // dispatch({type: \"LOGIN_START\"});\r\n            // try {\r\n            //     const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\");\r\n            //     if (res.data.Loggedin === true) {\r\n                    \r\n            //         dispatch({type: \"LOGIN_SUCCESS\", payload: res.data.message});\r\n            //         setisLoggedin(true)\r\n            //     }\r\n            //     else{\r\n            //         setisLoggedin(false);\r\n            //     }\r\n            // } \r\n            // catch (error) {\r\n            //     setisLoggedin(false);\r\n            //     dispatch({type: \"LOGIN_FAILURE\", payload: error});    \r\n            //  }\r\n            try {\r\n                const accesstoken = localStorage.getItem(\"accesstoken\")\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\", {\r\n                    headers: {\r\n                        authorization: \"Bearer \" + accesstoken\r\n                    }\r\n                });\r\n                if (res.data.Loggedin === true) {\r\n                    setuser(res.data.message.user)\r\n                    setisLoggedin(true)\r\n                }\r\n                else{\r\n                    setisLoggedin(false);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setisLoggedin(false);\r\n             }\r\n            }\r\n            \r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const getConversations = async () =>{\r\n                try {\r\n                    const res = await axios.get(\"https://musasocialapi.herokuapp.com/conversations/\" + user?._id)\r\n                    setconversations(res.data)\r\n                }\r\n                catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            getConversations();\r\n        }\r\n        \r\n    }, [user?._id])\r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            Socket.current = io(\"ws://localhost:8900\");\r\n            Socket.current.on(\"getMessage\", data => {\r\n            setarrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now(),\r\n            })\r\n        })\r\n        }\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            Socket.current.emit(\"addUser\", user?._id)\r\n            Socket.current.on(\"getUsers\", (users) => {setonlineUsers(user?.followings.filter((f) => users.some((u) => u.userId === f))); console.log(users)})\r\n        }\r\n        \r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) && setmessages((prev) => [...prev, arrivalMessage])\r\n        }\r\n    }, [arrivalMessage, currentChat])\r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const getMessages = async () =>{\r\n                try {\r\n                    const res = await axios.get(\"https://musasocialapi.herokuapp.com/messages/\" + currentChat?._id)\r\n                    setmessages(res.data)\r\n                } \r\n                catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            getMessages();\r\n        }\r\n        \r\n\r\n    },[currentChat])\r\n\r\n   \r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: user?._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        }\r\n        \r\n        const receiverId = currentChat.members.find(member => member !== user?._id)\r\n        Socket.current.emit(\"sendMessage\", \r\n        {   \r\n            senderId: user?._id, \r\n            receiverId: receiverId, \r\n            text: newMessage\r\n        })\r\n        setnewMessage(\"\");\r\n        try {\r\n            const res = await axios.post(\"https://musasocialapi.herokuapp.com/messages\", message)\r\n            setmessages([...messages , res.data])\r\n        } \r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({behavior: \"smooth\"})\r\n    }, [messages])\r\n\r\n    if (!isLoggedin) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <Topbar/>\r\n        <div className=\"messenger\">\r\n            <div className=\"chatMenu\">\r\n                <div className=\"chatMenuWrapper\">\r\n                    <input placeholder=\"Search for Friends\" className=\"chatMenuInput\" />\r\n                    {\r\n                        conversations.map((c) => (\r\n                            <div className=\"\" onClick={() => setcurrentChat(c)}>\r\n                                <Conversation conversation={c} currentUser={user}/>\r\n                            </div>\r\n                            \r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"chatBox\">\r\n                <div className=\"chatBoxWrapper\">\r\n                    {\r\n                        currentChat?<><div className=\"chatBoxTop\">\r\n                            \r\n                        {\r\n                            messages.map((m) => (\r\n                                <div ref={scrollRef}>\r\n                                    <Message own={m?.sender === user?._id} message={m} />\r\n                                </div>\r\n                                \r\n                            ))\r\n                        }\r\n                        \r\n                    </div>\r\n                    <div className=\"chatBoxBottom\">\r\n                    <textarea placeholder=\"Write Something...\" className=\"chatMessageInput\" onChange={(e) => setnewMessage(e.target.value)} value={newMessage}></textarea>\r\n                    <button className=\"chatSubmitButton\" onClick={handleSubmit}>Send</button>\r\n                    </div>\r\n                    </>\r\n                    : <span className=\"noConversationText\">Open a Convo to start Chatting</span>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineWrapper\">\r\n                    <ChatOnline onlineusers={onlineUsers} currentId={user?._id} setcurrentChat={setcurrentChat}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\register\\Register.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\apiCalls.js",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\rightbar\\Rightbar.jsx",["118","119","120","121","122"],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\Message\\Message.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\feed\\Feed.jsx",["123","124","125"],"import \"./feed.css\"\r\nimport Share from \"../share/Share\";\r\nimport Post from \"../post/Post\";\r\nimport  axios  from \"axios\";\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Feed({username, user}) {\r\n    //const {user} = useContext(AuthContext)\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\nconst [posts, SetPosts] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchPosts = async () =>{\r\n            const result = username? await axios.get(`https://musasocialapi.herokuapp.com/post/profile/${username}`) : await axios.get(`https://musasocialapi.herokuapp.com/post/timeline/${user?._id}`)\r\n            SetPosts(result.data.sort((p1, p2) =>{\r\n                return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n            }));\r\n        };\r\n        fetchPosts();\r\n    }, [username, user?._id])\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feedWrapper\">\r\n                {(!username || username === user?.username) &&<Share/>}\r\n                {posts.map(p=> (\r\n                    <Post key={p._id} post={p}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\topbar\\Topbar.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\sidebar\\Sidebar.jsx",["126"],"import \"./sidebar.css\"\r\nimport { RssFeed, Chat, PlayCircleFilledOutlined, Group, Bookmark, HelpOutline, WorkOutline, Event, School } from \"@material-ui/icons\";\r\nimport CloseFriend from \"../closefriend/CloseFriend\";\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebarWrapper\">\r\n                <ul className=\"sidebarList\">\r\n                    <li className=\"sidebarListItem\">\r\n                        <RssFeed className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Feed</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Chat className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Chats</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <PlayCircleFilledOutlined className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Video</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Group className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Groups</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Bookmark className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">BookMarks</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <HelpOutline className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Questions</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <WorkOutline className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Jobs</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Event className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Events</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <School className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Courses</span>\r\n                    </li>\r\n                </ul>\r\n                <button className=\"sidebarButton\">Show More</button>\r\n                <hr className=\"sidebarHr\" />\r\n                <ul className=\"sidebarFriendList\">\r\n                    {/* close friends component here */}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\chatOnline\\ChatOnline.jsx",["127"],"import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./chatonline.css\"\r\n\r\nexport default function ChatOnline({onlineusers, currentId, setcurrentChat}) {\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const [friends, setfriends] = useState(null)\r\n    const [onlineFriends, setonlineFriends] = useState([])\r\n    useEffect(() => {\r\n        const getFriends = async () =>{\r\n            try {\r\n                const res = await axios.get(\"/users/friends/\" + currentId)\r\n                setfriends(res.data)\r\n            } \r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getFriends();\r\n        \r\n    }, [currentId])\r\n\r\n    const handleClick = async (userr) => {\r\n        try {\r\n            const res = await axios.get(`/conversations/find/${currentId}/${userr._id}`)\r\n            console.log(res)\r\n            setcurrentChat(res.data)\r\n        } \r\n        catch (error) {\r\n           console.log(error) \r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setonlineFriends([]);\r\n        for (let index = 0; index < onlineusers?.length; index++) {\r\n            for (let i = 0; i < friends?.length; i++) {\r\n                if (onlineusers[index] === friends[i]._id) {\r\n                    setonlineFriends([...onlineFriends, friends[i]])\r\n                }\r\n            }\r\n        }\r\n    }, [friends, onlineusers])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chatOnline\">\r\n            {onlineFriends?.map((use) => (\r\n                <div className=\"chatOnlineFriend\" onClick={() => handleClick(use)}>\r\n                <div className=\"chatOnlineImgContainer\">\r\n                    <img className=\"chatOnlineImg\" src={PF + use?.profilePicture} alt=\"\" />\r\n                    <div className=\"chatOnlineBadge\"></div>\r\n                </div>\r\n                <span className=\"chatOnlineName\">{use?.username}</span>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\conversation\\Conversation.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\online\\Online.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\share\\Share.jsx",["128"],"import \"./share.css\";\r\nimport { PermMedia, Label, Room, EmojiEmotions, Cancel } from \"@material-ui/icons\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport {useEffect, useRef, useState} from \"react\"\r\nimport axios from \"axios\";\r\n\r\nexport default function Share() {\r\n    // const {user} = useContext(AuthContext)\r\n    const [user, setuser] = useState(null)\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const desc = useRef();\r\n    const [file, setfile] = useState(null)\r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            try {\r\n                const accesstoken = localStorage.getItem(\"accesstoken\")\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\", {\r\n                    headers: {\r\n                        authorization: \"Bearer \" + accesstoken\r\n                    }\r\n                });\r\n                if (res.data.Loggedin === true) {\r\n                    setuser(res.data.message.user)\r\n                }\r\n                \r\n            } \r\n            catch (error) {\r\n                console.log(error)\r\n             }\r\n        }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n    const submitHandler = async(e) =>{\r\n        e.preventDefault()\r\n        const newPost = {\r\n            userId: user?._id,\r\n            desc: desc.current.value? desc.current.value : \" \" \r\n        }\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            \r\n            newPost.img = filename;\r\n            try {\r\n                await axios.post(\"https://musasocialapi.herokuapp.com/upload\", data)\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        try {\r\n            await axios.post(\"https://musasocialapi.herokuapp.com/post\", newPost)\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"share\">\r\n            <div className=\"shareWrapper\">\r\n                <div className=\"shareTop\">\r\n                    <img src= {PF + user?.profilePicture} alt=\"\" className=\"shareProfileImg\" />\r\n                    <input ref={desc} placeholder={\"What's in your mind \" + user?.username} className=\"shareInput\" />\r\n                </div>\r\n                <hr className=\"shareHr\" />\r\n                {file &&(\r\n                    <div className=\"shareImgContainer\">\r\n                        <img src={URL.createObjectURL(file)} alt=\"\" className=\"shareImg\"/>\r\n                        <Cancel className=\"shareImageCancel\" onClick={() => {setfile(null)}}/>\r\n                    </div>\r\n                )}\r\n                <form className=\"shareBottom\" onSubmit={submitHandler}>\r\n                    <div className=\"shareOptions\">\r\n                        <label htmlFor=\"file\" className=\"shareOption\">\r\n                            <PermMedia className=\"shareIcon\" htmlColor=\"tomato\"/>\r\n                            <span className=\"shareOptionText\">Photo or Video</span>\r\n                            <input type=\"file\" style={{display: \"none\"}} accept=\".png,.jpg,.jpeg\" id=\"file\" onChange={(e)=>{setfile(e.target.files[0])}}/>\r\n                        </label>\r\n                        <div className=\"shareOption\">\r\n                            <Label className=\"shareIcon\" htmlColor=\"blue\"/>\r\n                            <span className=\"shareOptionText\">Tag</span>\r\n                        </div>\r\n                        <div className=\"shareOption\">\r\n                            <Room className=\"shareIcon\" htmlColor=\"green\"/>\r\n                            <span className=\"shareOptionText\">Location</span>\r\n                        </div>\r\n                        <div className=\"shareOption\">\r\n                            <EmojiEmotions className=\"shareIcon\" htmlColor=\"goldenrod\"/>\r\n                            <span className=\"shareOptionText\">Feelings</span>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"shareButton\" type=\"submit\">Share</button>\r\n                </form>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\closefriend\\CloseFriend.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\post\\Post.jsx",["129","130","131"],"import \"./post.css\"\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport  axios  from \"axios\";\r\nimport { format } from \"timeago.js\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Post({post}) {\r\n    const [currentuser, setcurrentuser] = useState(null)\r\n    //const {user:currentuser} = useContext(AuthContext)\r\n    const [user, setUser] = useState({})\r\n    const [like, setLike] = useState(post.likes.length)\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    \r\n    useEffect(() =>{\r\n        setIsLiked(post.likes.includes(currentuser?._id));\r\n    }, [currentuser?._id, post.likes]);\r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            try {\r\n                const accesstoken = localStorage.getItem(\"accesstoken\")\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\", {\r\n                    headers: {\r\n                        authorization: \"Bearer \" + accesstoken\r\n                    }\r\n                });\r\n                if (res.data.Loggedin === true) {\r\n                    setcurrentuser(res.data.message.user)\r\n                }\r\n                \r\n            } \r\n            catch (error) {\r\n                console.log(error)\r\n             }\r\n        }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () =>{\r\n            const result = await axios.get(`https://musasocialapi.herokuapp.com/users?userId=${post.userId}`);\r\n            setUser(result.data)\r\n            \r\n        };\r\n        fetchUser();\r\n    }, []);\r\n\r\n    const likeHandler = () =>{\r\n        try {\r\n            axios.put(\"https://musasocialapi.herokuapp.com/post/\" + post?._id + \"/like\", {userId: currentuser?._id})\r\n            console.log(\"post liked........\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        setLike(isLiked ? like - 1 : like + 1)\r\n        setIsLiked(!isLiked)\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"postWrapper\">\r\n                <div className=\"postTop\"> \r\n                    <div className=\"postTopLeft\">\r\n                    <Link to={`profile/${user?.username}`}>\r\n                        <img src={ user.profilePicture? PF + user?.profilePicture : PF+\"nopfp.png\"} alt=\"\" className=\"postProfileImg\" />\r\n                    </Link>\r\n                        <span className=\"postUsername\">{user?.username}</span>\r\n                        <span className=\"postDate\">{format(post.createdAt)}</span>\r\n                    </div>\r\n                    <div className=\"postTopRight\">\r\n                        <MoreVert/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"postCenter\">\r\n                    <span className=\"postText\">{post?.desc}</span>\r\n                    <img src={PF+post.img} alt=\"\" className=\"postImg\" />\r\n                </div>\r\n                <div className=\"postBottom\">\r\n                    <div className=\"postBottomLeft\">\r\n                        <img src=  {PF + \"like.png\"}  alt=\"\" className=\"likeIcon\" onClick={likeHandler}/>\r\n                        <img src={PF + \"heart1.png\"} alt=\"\" className=\"likeIcon\" onClick={likeHandler}/>\r\n                        <span className=\"postLikeCounter\">{like}</span>\r\n                    </div>\r\n                    <div className=\"postBottomRight\">\r\n                        <span className=\"postCommentText\">{post.comment} Comments</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":19,"column":10,"nodeType":"138","messageId":"139","endLine":19,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":21,"column":13,"nodeType":"142","endLine":24,"endColumn":4},{"ruleId":"136","severity":1,"message":"143","line":26,"column":10,"nodeType":"138","messageId":"139","endLine":26,"endColumn":14},{"ruleId":"136","severity":1,"message":"144","line":1,"column":37,"nodeType":"138","messageId":"139","endLine":1,"endColumn":46},{"ruleId":"136","severity":1,"message":"145","line":6,"column":31,"nodeType":"138","messageId":"139","endLine":6,"endColumn":41},{"ruleId":"136","severity":1,"message":"146","line":9,"column":10,"nodeType":"138","messageId":"139","endLine":9,"endColumn":21},{"ruleId":"136","severity":1,"message":"145","line":6,"column":31,"nodeType":"138","messageId":"139","endLine":6,"endColumn":41},{"ruleId":"136","severity":1,"message":"146","line":10,"column":10,"nodeType":"138","messageId":"139","endLine":10,"endColumn":21},{"ruleId":"140","severity":1,"message":"147","line":55,"column":8,"nodeType":"148","endLine":55,"endColumn":16,"suggestions":"149"},{"ruleId":"136","severity":1,"message":"150","line":3,"column":9,"nodeType":"138","messageId":"139","endLine":3,"endColumn":18},{"ruleId":"136","severity":1,"message":"143","line":13,"column":11,"nodeType":"138","messageId":"139","endLine":13,"endColumn":15},{"ruleId":"136","severity":1,"message":"151","line":13,"column":29,"nodeType":"138","messageId":"139","endLine":13,"endColumn":34},{"ruleId":"136","severity":1,"message":"152","line":13,"column":36,"nodeType":"138","messageId":"139","endLine":13,"endColumn":44},{"ruleId":"136","severity":1,"message":"145","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":20},{"ruleId":"136","severity":1,"message":"146","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":21},{"ruleId":"140","severity":1,"message":"147","line":83,"column":8,"nodeType":"148","endLine":83,"endColumn":19,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"147","line":96,"column":8,"nodeType":"148","endLine":96,"endColumn":10,"suggestions":"154"},{"ruleId":"140","severity":1,"message":"147","line":104,"column":8,"nodeType":"148","endLine":104,"endColumn":14,"suggestions":"155"},{"ruleId":"140","severity":1,"message":"147","line":110,"column":8,"nodeType":"148","endLine":110,"endColumn":37,"suggestions":"156"},{"ruleId":"140","severity":1,"message":"147","line":127,"column":7,"nodeType":"148","endLine":127,"endColumn":20,"suggestions":"157"},{"ruleId":"136","severity":1,"message":"158","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"145","line":4,"column":31,"nodeType":"138","messageId":"139","endLine":4,"endColumn":41},{"ruleId":"136","severity":1,"message":"146","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":21},{"ruleId":"140","severity":1,"message":"159","line":35,"column":8,"nodeType":"148","endLine":35,"endColumn":10,"suggestions":"160"},{"ruleId":"140","severity":1,"message":"161","line":59,"column":8,"nodeType":"148","endLine":59,"endColumn":26,"suggestions":"162"},{"ruleId":"136","severity":1,"message":"145","line":5,"column":38,"nodeType":"138","messageId":"139","endLine":5,"endColumn":48},{"ruleId":"136","severity":1,"message":"146","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":21},{"ruleId":"136","severity":1,"message":"163","line":10,"column":11,"nodeType":"138","messageId":"139","endLine":10,"endColumn":13},{"ruleId":"136","severity":1,"message":"164","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":19},{"ruleId":"140","severity":1,"message":"165","line":43,"column":8,"nodeType":"148","endLine":43,"endColumn":30,"suggestions":"166"},{"ruleId":"136","severity":1,"message":"146","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":21},{"ruleId":"136","severity":1,"message":"145","line":5,"column":31,"nodeType":"138","messageId":"139","endLine":5,"endColumn":41},{"ruleId":"136","severity":1,"message":"146","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":21},{"ruleId":"140","severity":1,"message":"167","line":49,"column":8,"nodeType":"148","endLine":49,"endColumn":10,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'User' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","React Hook useEffect has a missing dependency: 'isLoggedin'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'loginCall' is defined but never used.","'error' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["172"],["173"],["174"],["175"],["176"],"'Online' is defined but never used.","React Hook useEffect has a missing dependency: 'currentuser'. Either include it or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["178"],"'PF' is assigned a value but never used.","'CloseFriend' is defined but never used.","React Hook useEffect has a missing dependency: 'onlineFriends'. Either include it or remove the dependency array. You can also do a functional update 'setonlineFriends(o => ...)' if you only need 'onlineFriends' in the 'setonlineFriends' call.",["179"],"React Hook useEffect has a missing dependency: 'post.userId'. Either include it or remove the dependency array.",["180"],"no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [isLoggedin, params]",{"range":"201","text":"202"},"Update the dependencies array to be: [isLoggedin, user?._id]",{"range":"203","text":"204"},"Update the dependencies array to be: [isLoggedin]",{"range":"205","text":"206"},"Update the dependencies array to be: [isLoggedin, user]",{"range":"207","text":"208"},"Update the dependencies array to be: [arrivalMessage, currentChat, isLoggedin]",{"range":"209","text":"210"},"Update the dependencies array to be: [currentChat, isLoggedin]",{"range":"211","text":"212"},"Update the dependencies array to be: [currentuser]",{"range":"213","text":"214"},"Update the dependencies array to be: [currentuser._id, user]",{"range":"215","text":"216"},"Update the dependencies array to be: [friends, onlineFriends, onlineusers]",{"range":"217","text":"218"},"Update the dependencies array to be: [post.userId]",{"range":"219","text":"220"},[1896,1904],"[isLoggedin, params]",[3115,3126],"[isLoggedin, user?._id]",[3486,3488],"[isLoggedin]",[3789,3795],"[isLoggedin, user]",[4008,4037],"[arrivalMessage, currentChat, isLoggedin]",[4505,4518],"[currentChat, isLoggedin]",[1320,1322],"[currentuser]",[2215,2233],"[currentuser._id, user]",[1379,1401],"[friends, onlineFriends, onlineusers]",[1754,1756],"[post.userId]"]