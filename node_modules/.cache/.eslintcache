[{"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\index.js":"1","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\App.js":"2","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthContext.js":"3","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthReducer.js":"4","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\home\\Home.jsx":"5","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\profile\\Profile.jsx":"6","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\login\\Login.jsx":"7","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\messenger\\Messenger.jsx":"8","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\register\\Register.jsx":"9","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\apiCalls.js":"10","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\rightbar\\Rightbar.jsx":"11","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\Message\\Message.jsx":"12","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\feed\\Feed.jsx":"13","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\topbar\\Topbar.jsx":"14","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\sidebar\\Sidebar.jsx":"15","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\chatOnline\\ChatOnline.jsx":"16","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\conversation\\Conversation.jsx":"17","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\online\\Online.jsx":"18","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\share\\Share.jsx":"19","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\closefriend\\CloseFriend.jsx":"20","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\post\\Post.jsx":"21"},{"size":330,"mtime":1623594842541,"results":"22","hashOfConfig":"23"},{"size":1887,"mtime":1624198683670,"results":"24","hashOfConfig":"23"},{"size":1133,"mtime":1624113645717,"results":"25","hashOfConfig":"23"},{"size":1213,"mtime":1623594842540,"results":"26","hashOfConfig":"23"},{"size":2405,"mtime":1624569294038,"results":"27","hashOfConfig":"23"},{"size":3385,"mtime":1624613768537,"results":"28","hashOfConfig":"23"},{"size":2670,"mtime":1624569294037,"results":"29","hashOfConfig":"23"},{"size":7634,"mtime":1624569294037,"results":"30","hashOfConfig":"23"},{"size":2317,"mtime":1623594842547,"results":"31","hashOfConfig":"23"},{"size":366,"mtime":1623594842526,"results":"32","hashOfConfig":"23"},{"size":5613,"mtime":1624613768537,"results":"33","hashOfConfig":"23"},{"size":611,"mtime":1623594842527,"results":"34","hashOfConfig":"23"},{"size":1235,"mtime":1624608458297,"results":"35","hashOfConfig":"23"},{"size":3855,"mtime":1624571717461,"results":"36","hashOfConfig":"23"},{"size":2695,"mtime":1623684953994,"results":"37","hashOfConfig":"23"},{"size":1963,"mtime":1624116139945,"results":"38","hashOfConfig":"23"},{"size":1002,"mtime":1624115100184,"results":"39","hashOfConfig":"23"},{"size":610,"mtime":1623594842533,"results":"40","hashOfConfig":"23"},{"size":4298,"mtime":1624571717461,"results":"41","hashOfConfig":"23"},{"size":370,"mtime":1623594842529,"results":"42","hashOfConfig":"23"},{"size":3745,"mtime":1624570530721,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"hsyip8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\index.js",[],["97","98"],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\App.js",["99","100","101","102"],"import Home from \"./pages/home/Home\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Profile from \"./pages/profile/Profile\";\r\nimport Messenger from \"./pages/messenger/Messenger\";\r\nimport Register from \"./pages/register/Register\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction App() {\r\n  axios.defaults.withCredentials = true;\r\n\r\n  const [User, setUser] = useState(null)\r\n\r\n  useEffect(async () => {\r\n    const userInfo = axios.get(\"https://musasocialapi.herokuapp.com/user/getuser\")\r\n    setUser(userInfo.data)\r\n  }, [])\r\n\r\n  const {user} = useContext(AuthContext)\r\n  return (\r\n    // <Router>\r\n    //   <Switch>\r\n    //     <Route exact path=\"/\">\r\n    //       {user? <Home/>: <Login/>}\r\n    //     </Route>\r\n    //     <Route path=\"/login\">\r\n    //       {user? <Redirect to=\"/\"/> : <Login/>}\r\n    //     </Route>\r\n    //     <Route path=\"/register\">\r\n    //       {user? <Redirect to=\"/\"/>: <Register/>}\r\n    //     </Route>\r\n    //     <Route path=\"/profile/:username\">\r\n    //       {user? <Profile/> : <Login/>}\r\n    //     </Route>\r\n    //     <Route exact path=\"/messenger\">\r\n    //       {!user? <Redirect to=\"/\"/>: <Messenger/>}\r\n    //     </Route>\r\n    //   </Switch>\r\n    // </Router>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home/>\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login/>\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register/>\r\n        </Route>\r\n        <Route path=\"/profile/:username\">\r\n         <Profile/>\r\n        </Route>\r\n        <Route exact path=\"/messenger\">\r\n          <Messenger/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n    \r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthContext.js",["103"],"import { createContext, useReducer, useEffect } from \"react\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nconst INITIAL_STATE = {\r\n    // user: {\r\n    //   // id: \"60bf7a234e5fd0849c910b16\",\r\n    //   // username: \"musmaro\",\r\n    //   // email: \"musamusk22@gmail.com\",\r\n    //   // profilePicture: \"7.jpg\",\r\n    //   // coverPicture: \"tesla.jpg\",\r\n    //   // followers: [],\r\n    //   // followings: [],\r\n    // },\r\n    \r\n    user: null, //JSON.parse(localStorage.getItem(\"user\")) || null,\r\n    isFetching: false,\r\n    error: false,\r\n};\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE);\r\n\r\nexport const AuthContextProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n    \r\n    // useEffect(()=>{\r\n    //   localStorage.setItem(\"user\", JSON.stringify(state.user))\r\n    // },[state.user])\r\n\r\n    return (\r\n        <AuthContext.Provider \r\n          value={{\r\n            user: state.user,\r\n            isFetching: state.isFetching,\r\n            error:state.error,\r\n            dispatch,\r\n          }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthReducer.js",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\home\\Home.jsx",["104","105"],"import Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport \"./home.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Home() {\r\n    const [isLoggedin, setisLoggedin] = useState(true)\r\n    const [user, setuser] = useState(null)\r\n    //const{user, isFetching, error, dispatch} = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            // dispatch({type: \"LOGIN_START\"});\r\n            // try {\r\n            //     const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\");\r\n                // if (res.data.Loggedin === true) {\r\n                //     setisLoggedin(true)\r\n                //     dispatch({type: \"LOGIN_SUCCESS\", payload: res.data.message});\r\n                // }\r\n            //     else{\r\n            //         setisLoggedin(false);\r\n            //     }\r\n            // } \r\n            // catch (error) {\r\n            //     setisLoggedin(false);\r\n            //     dispatch({type: \"LOGIN_FAILURE\", payload: error});    \r\n            //  }\r\n            try {\r\n                const accesstoken = localStorage.getItem(\"accesstoken\")\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\", {\r\n                    headers: {\r\n                        authorization: \"Bearer \" + accesstoken\r\n                    }\r\n                });\r\n                if (res.data.Loggedin === true) {\r\n                    setuser(res.data.message.user)\r\n                    setisLoggedin(true)\r\n                }\r\n                else{\r\n                    setisLoggedin(false);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setisLoggedin(false);\r\n             }\r\n        }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    if (!isLoggedin) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Topbar/>\r\n        <div className=\"homeContainer\">\r\n            <Sidebar/>\r\n            <Feed user={user}/>\r\n            <Rightbar/>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\profile\\Profile.jsx",["106","107","108"],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\login\\Login.jsx",["109","110","111","112"],"import { useContext, useRef } from \"react\"\r\nimport \"./login.css\"\r\nimport {loginCall} from \"../../apiCalls\"\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const email = useRef();\r\n    const password = useRef();\r\n    const{user, isFetching, error, dispatch} = useContext(AuthContext);\r\n    \r\n    const Submit = async (e) => {\r\n        e.preventDefault();\r\n        // dispatch({type: \"LOGIN_START\"});\r\n        // try {\r\n        //     const res = await axios.post(\"https://musasocialapi.herokuapp.com/auth/login\", {email: email.current.value, password: password.current.value});\r\n        //     dispatch({type: \"LOGIN_SUCCESS\", payload: res.data.accesstoken});\r\n        //     history.push(\"/\")\r\n        \r\n        // } catch (error) {\r\n        //     dispatch({type: \"LOGIN_FAILURE\", payload: error});\r\n        //     console.log(error)\r\n        // }\r\n        // loginCall({email: email.current.value, password: password.current.value}, dispatch)\r\n        try {\r\n            const res = await axios.post(\"https://musasocialapi.herokuapp.com/auth/login\", {email: email.current.value, password: password.current.value});\r\n            localStorage.setItem(\"accesstoken\", res.data.accesstoken)\r\n            history.push(\"/\")\r\n        } \r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"loginWrapper\">\r\n                <div className=\"loginLeft\">\r\n                    <h3 className=\"loginLogo\">MusaSocial</h3>\r\n                    <span className=\"loginDesc\">Connect with Friends That You Don't Have :)</span>\r\n                </div>\r\n                <div className=\"loginRight\">\r\n                    <form className=\"loginBox\" onSubmit={Submit}>\r\n                        <input placeholder=\"Email\" className=\"loginInput\" ref={email} required type=\"email\"/>\r\n                        <input placeholder=\"Password\" className=\"loginInput\" minLength=\"6\" ref={password} required type=\"password\"/>\r\n                        <button className=\"loginButton\" disabled={isFetching}>{isFetching? <CircularProgress color=\"white\"/> : \"Login\"}</button>\r\n                        <span className=\"loginForgot\">Forgot Password</span>\r\n                        <button className=\"loginRegisterButton\">{isFetching? <CircularProgress color=\"white\"/> : \"Create Account\"}</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\messenger\\Messenger.jsx",["113","114","115","116","117","118","119"],"import './messenger.css'\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useState, useEffect, useRef } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport axios from \"axios\"\r\nimport { io } from \"socket.io-client\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Messenger() {\r\n    const [conversations, setconversations] = useState([])\r\n    const [currentChat, setcurrentChat] = useState(null)\r\n    const [newMessage, setnewMessage] = useState(null)\r\n    const [messages, setmessages] = useState(null)\r\n    const [arrivalMessage, setarrivalMessage] = useState(null)\r\n    const [onlineUsers, setonlineUsers] = useState([])\r\n    const Socket = useRef()\r\n    const scrollRef = useRef()\r\n    const [isLoggedin, setisLoggedin] = useState(true)\r\n    // const{user, dispatch} = useContext(AuthContext);\r\n    const [user, setuser] = useState(null)\r\n    \r\n    \r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            // dispatch({type: \"LOGIN_START\"});\r\n            // try {\r\n            //     const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\");\r\n            //     if (res.data.Loggedin === true) {\r\n                    \r\n            //         dispatch({type: \"LOGIN_SUCCESS\", payload: res.data.message});\r\n            //         setisLoggedin(true)\r\n            //     }\r\n            //     else{\r\n            //         setisLoggedin(false);\r\n            //     }\r\n            // } \r\n            // catch (error) {\r\n            //     setisLoggedin(false);\r\n            //     dispatch({type: \"LOGIN_FAILURE\", payload: error});    \r\n            //  }\r\n            try {\r\n                const accesstoken = localStorage.getItem(\"accesstoken\")\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\", {\r\n                    headers: {\r\n                        authorization: \"Bearer \" + accesstoken\r\n                    }\r\n                });\r\n                if (res.data.Loggedin === true) {\r\n                    setuser(res.data.message.user)\r\n                    setisLoggedin(true)\r\n                }\r\n                else{\r\n                    setisLoggedin(false);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setisLoggedin(false);\r\n             }\r\n            }\r\n            \r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const getConversations = async () =>{\r\n                try {\r\n                    const res = await axios.get(\"https://musasocialapi.herokuapp.com/conversations/\" + user?._id)\r\n                    setconversations(res.data)\r\n                }\r\n                catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            getConversations();\r\n        }\r\n        \r\n    }, [user?._id])\r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            Socket.current = io(\"ws://localhost:8900\");\r\n            Socket.current.on(\"getMessage\", data => {\r\n            setarrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now(),\r\n            })\r\n        })\r\n        }\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            Socket.current.emit(\"addUser\", user?._id)\r\n            Socket.current.on(\"getUsers\", (users) => {setonlineUsers(user?.followings.filter((f) => users.some((u) => u.userId === f))); console.log(users)})\r\n        }\r\n        \r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) && setmessages((prev) => [...prev, arrivalMessage])\r\n        }\r\n    }, [arrivalMessage, currentChat])\r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const getMessages = async () =>{\r\n                try {\r\n                    const res = await axios.get(\"https://musasocialapi.herokuapp.com/messages/\" + currentChat?._id)\r\n                    setmessages(res.data)\r\n                } \r\n                catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            getMessages();\r\n        }\r\n        \r\n\r\n    },[currentChat])\r\n\r\n   \r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: user?._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        }\r\n        \r\n        const receiverId = currentChat.members.find(member => member !== user?._id)\r\n        Socket.current.emit(\"sendMessage\", \r\n        {   \r\n            senderId: user?._id, \r\n            receiverId: receiverId, \r\n            text: newMessage\r\n        })\r\n        setnewMessage(\"\");\r\n        try {\r\n            const res = await axios.post(\"https://musasocialapi.herokuapp.com/messages\", message)\r\n            setmessages([...messages , res.data])\r\n        } \r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({behavior: \"smooth\"})\r\n    }, [messages])\r\n\r\n    if (!isLoggedin) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <Topbar/>\r\n        <div className=\"messenger\">\r\n            <div className=\"chatMenu\">\r\n                <div className=\"chatMenuWrapper\">\r\n                    <input placeholder=\"Search for Friends\" className=\"chatMenuInput\" />\r\n                    {\r\n                        conversations.map((c) => (\r\n                            <div className=\"\" onClick={() => setcurrentChat(c)}>\r\n                                <Conversation conversation={c} currentUser={user}/>\r\n                            </div>\r\n                            \r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"chatBox\">\r\n                <div className=\"chatBoxWrapper\">\r\n                    {\r\n                        currentChat?<><div className=\"chatBoxTop\">\r\n                            \r\n                        {\r\n                            messages.map((m) => (\r\n                                <div ref={scrollRef}>\r\n                                    <Message own={m?.sender === user?._id} message={m} />\r\n                                </div>\r\n                                \r\n                            ))\r\n                        }\r\n                        \r\n                    </div>\r\n                    <div className=\"chatBoxBottom\">\r\n                    <textarea placeholder=\"Write Something...\" className=\"chatMessageInput\" onChange={(e) => setnewMessage(e.target.value)} value={newMessage}></textarea>\r\n                    <button className=\"chatSubmitButton\" onClick={handleSubmit}>Send</button>\r\n                    </div>\r\n                    </>\r\n                    : <span className=\"noConversationText\">Open a Convo to start Chatting</span>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineWrapper\">\r\n                    <ChatOnline onlineusers={onlineUsers} currentId={user?._id} setcurrentChat={setcurrentChat}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\register\\Register.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\apiCalls.js",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\rightbar\\Rightbar.jsx",["120","121","122","123"],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\Message\\Message.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\feed\\Feed.jsx",["124","125","126"],"import \"./feed.css\"\r\nimport Share from \"../share/Share\";\r\nimport Post from \"../post/Post\";\r\nimport  axios  from \"axios\";\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Feed({username, user}) {\r\n    //const {user} = useContext(AuthContext)\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\nconst [posts, SetPosts] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchPosts = async () =>{\r\n            const result = username? await axios.get(`https://musasocialapi.herokuapp.com/post/profile/${username}`) : await axios.get(`https://musasocialapi.herokuapp.com/post/timeline/${user?._id}`)\r\n            SetPosts(result.data.sort((p1, p2) =>{\r\n                return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n            }));\r\n        };\r\n        fetchPosts();\r\n    }, [username, user?._id])\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feedWrapper\">\r\n                {(!username || username === user?.username) &&<Share/>}\r\n                {posts.map(p=> (\r\n                    <Post key={p._id} post={p}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\topbar\\Topbar.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\sidebar\\Sidebar.jsx",["127"],"import \"./sidebar.css\"\r\nimport { RssFeed, Chat, PlayCircleFilledOutlined, Group, Bookmark, HelpOutline, WorkOutline, Event, School } from \"@material-ui/icons\";\r\nimport CloseFriend from \"../closefriend/CloseFriend\";\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebarWrapper\">\r\n                <ul className=\"sidebarList\">\r\n                    <li className=\"sidebarListItem\">\r\n                        <RssFeed className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Feed</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Chat className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Chats</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <PlayCircleFilledOutlined className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Video</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Group className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Groups</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Bookmark className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">BookMarks</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <HelpOutline className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Questions</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <WorkOutline className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Jobs</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Event className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Events</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <School className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Courses</span>\r\n                    </li>\r\n                </ul>\r\n                <button className=\"sidebarButton\">Show More</button>\r\n                <hr className=\"sidebarHr\" />\r\n                <ul className=\"sidebarFriendList\">\r\n                    {/* close friends component here */}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\chatOnline\\ChatOnline.jsx",["128"],"import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./chatonline.css\"\r\n\r\nexport default function ChatOnline({onlineusers, currentId, setcurrentChat}) {\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const [friends, setfriends] = useState(null)\r\n    const [onlineFriends, setonlineFriends] = useState([])\r\n    useEffect(() => {\r\n        const getFriends = async () =>{\r\n            try {\r\n                const res = await axios.get(\"/users/friends/\" + currentId)\r\n                setfriends(res.data)\r\n            } \r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getFriends();\r\n        \r\n    }, [currentId])\r\n\r\n    const handleClick = async (userr) => {\r\n        try {\r\n            const res = await axios.get(`/conversations/find/${currentId}/${userr._id}`)\r\n            console.log(res)\r\n            setcurrentChat(res.data)\r\n        } \r\n        catch (error) {\r\n           console.log(error) \r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setonlineFriends([]);\r\n        for (let index = 0; index < onlineusers?.length; index++) {\r\n            for (let i = 0; i < friends?.length; i++) {\r\n                if (onlineusers[index] === friends[i]._id) {\r\n                    setonlineFriends([...onlineFriends, friends[i]])\r\n                }\r\n            }\r\n        }\r\n    }, [friends, onlineusers])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chatOnline\">\r\n            {onlineFriends?.map((use) => (\r\n                <div className=\"chatOnlineFriend\" onClick={() => handleClick(use)}>\r\n                <div className=\"chatOnlineImgContainer\">\r\n                    <img className=\"chatOnlineImg\" src={PF + use?.profilePicture} alt=\"\" />\r\n                    <div className=\"chatOnlineBadge\"></div>\r\n                </div>\r\n                <span className=\"chatOnlineName\">{use?.username}</span>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\conversation\\Conversation.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\online\\Online.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\share\\Share.jsx",["129"],"import \"./share.css\";\r\nimport { PermMedia, Label, Room, EmojiEmotions, Cancel } from \"@material-ui/icons\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport {useEffect, useRef, useState} from \"react\"\r\nimport axios from \"axios\";\r\n\r\nexport default function Share() {\r\n    // const {user} = useContext(AuthContext)\r\n    const [user, setuser] = useState(null)\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const desc = useRef();\r\n    const [file, setfile] = useState(null)\r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            try {\r\n                const accesstoken = localStorage.getItem(\"accesstoken\")\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\", {\r\n                    headers: {\r\n                        authorization: \"Bearer \" + accesstoken\r\n                    }\r\n                });\r\n                if (res.data.Loggedin === true) {\r\n                    setuser(res.data.message.user)\r\n                }\r\n                \r\n            } \r\n            catch (error) {\r\n                console.log(error)\r\n             }\r\n        }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n    const submitHandler = async(e) =>{\r\n        e.preventDefault()\r\n        const newPost = {\r\n            userId: user?._id,\r\n            desc: desc.current.value? desc.current.value : \" \" \r\n        }\r\n        if (file) {\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n            \r\n            newPost.img = filename;\r\n            try {\r\n                await axios.post(\"https://musasocialapi.herokuapp.com/upload\", data)\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        try {\r\n            await axios.post(\"https://musasocialapi.herokuapp.com/post\", newPost)\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"share\">\r\n            <div className=\"shareWrapper\">\r\n                <div className=\"shareTop\">\r\n                    <img src= {PF + user?.profilePicture} alt=\"\" className=\"shareProfileImg\" />\r\n                    <input ref={desc} placeholder={\"What's in your mind \" + user?.username} className=\"shareInput\" />\r\n                </div>\r\n                <hr className=\"shareHr\" />\r\n                {file &&(\r\n                    <div className=\"shareImgContainer\">\r\n                        <img src={URL.createObjectURL(file)} alt=\"\" className=\"shareImg\"/>\r\n                        <Cancel className=\"shareImageCancel\" onClick={() => {setfile(null)}}/>\r\n                    </div>\r\n                )}\r\n                <form className=\"shareBottom\" onSubmit={submitHandler}>\r\n                    <div className=\"shareOptions\">\r\n                        <label htmlFor=\"file\" className=\"shareOption\">\r\n                            <PermMedia className=\"shareIcon\" htmlColor=\"tomato\"/>\r\n                            <span className=\"shareOptionText\">Photo or Video</span>\r\n                            <input type=\"file\" style={{display: \"none\"}} accept=\".png,.jpg,.jpeg\" id=\"file\" onChange={(e)=>{setfile(e.target.files[0])}}/>\r\n                        </label>\r\n                        <div className=\"shareOption\">\r\n                            <Label className=\"shareIcon\" htmlColor=\"blue\"/>\r\n                            <span className=\"shareOptionText\">Tag</span>\r\n                        </div>\r\n                        <div className=\"shareOption\">\r\n                            <Room className=\"shareIcon\" htmlColor=\"green\"/>\r\n                            <span className=\"shareOptionText\">Location</span>\r\n                        </div>\r\n                        <div className=\"shareOption\">\r\n                            <EmojiEmotions className=\"shareIcon\" htmlColor=\"goldenrod\"/>\r\n                            <span className=\"shareOptionText\">Feelings</span>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"shareButton\" type=\"submit\">Share</button>\r\n                </form>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\closefriend\\CloseFriend.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\post\\Post.jsx",["130","131","132"],"import \"./post.css\"\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport  axios  from \"axios\";\r\nimport { format } from \"timeago.js\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Post({post}) {\r\n    const [currentuser, setcurrentuser] = useState(null)\r\n    //const {user:currentuser} = useContext(AuthContext)\r\n    const [user, setUser] = useState({})\r\n    const [like, setLike] = useState(post.likes.length)\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    \r\n    useEffect(() =>{\r\n        setIsLiked(post.likes.includes(currentuser?._id));\r\n    }, [currentuser?._id, post.likes]);\r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            try {\r\n                const accesstoken = localStorage.getItem(\"accesstoken\")\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\", {\r\n                    headers: {\r\n                        authorization: \"Bearer \" + accesstoken\r\n                    }\r\n                });\r\n                if (res.data.Loggedin === true) {\r\n                    setcurrentuser(res.data.message.user)\r\n                }\r\n                \r\n            } \r\n            catch (error) {\r\n                console.log(error)\r\n             }\r\n        }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () =>{\r\n            const result = await axios.get(`https://musasocialapi.herokuapp.com/users?userId=${post.userId}`);\r\n            setUser(result.data)\r\n            \r\n        };\r\n        fetchUser();\r\n    }, []);\r\n\r\n    const likeHandler = () =>{\r\n        try {\r\n            axios.put(\"https://musasocialapi.herokuapp.com/post/\" + post?._id + \"/like\", {userId: currentuser?._id})\r\n            console.log(\"post liked........\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        setLike(isLiked ? like - 1 : like + 1)\r\n        setIsLiked(!isLiked)\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"postWrapper\">\r\n                <div className=\"postTop\"> \r\n                    <div className=\"postTopLeft\">\r\n                    <Link to={`profile/${user?.username}`}>\r\n                        <img src={ user.profilePicture? PF + user?.profilePicture : PF+\"nopfp.png\"} alt=\"\" className=\"postProfileImg\" />\r\n                    </Link>\r\n                        <span className=\"postUsername\">{user?.username}</span>\r\n                        <span className=\"postDate\">{format(post.createdAt)}</span>\r\n                    </div>\r\n                    <div className=\"postTopRight\">\r\n                        <MoreVert/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"postCenter\">\r\n                    <span className=\"postText\">{post?.desc}</span>\r\n                    <img src={PF+post.img} alt=\"\" className=\"postImg\" />\r\n                </div>\r\n                <div className=\"postBottom\">\r\n                    <div className=\"postBottomLeft\">\r\n                        <img src=  {PF + \"like.png\"}  alt=\"\" className=\"likeIcon\" onClick={likeHandler}/>\r\n                        <img src={PF + \"heart1.png\"} alt=\"\" className=\"likeIcon\" onClick={likeHandler}/>\r\n                        <span className=\"postLikeCounter\">{like}</span>\r\n                    </div>\r\n                    <div className=\"postBottomRight\">\r\n                        <span className=\"postCommentText\">{post.comment} Comments</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":12,"column":3,"nodeType":"139","messageId":"140","endLine":12,"endColumn":11},{"ruleId":"137","severity":1,"message":"141","line":20,"column":10,"nodeType":"139","messageId":"140","endLine":20,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":22,"column":13,"nodeType":"144","endLine":25,"endColumn":4},{"ruleId":"137","severity":1,"message":"145","line":27,"column":10,"nodeType":"139","messageId":"140","endLine":27,"endColumn":14},{"ruleId":"137","severity":1,"message":"146","line":1,"column":37,"nodeType":"139","messageId":"140","endLine":1,"endColumn":46},{"ruleId":"137","severity":1,"message":"147","line":6,"column":31,"nodeType":"139","messageId":"140","endLine":6,"endColumn":41},{"ruleId":"137","severity":1,"message":"148","line":9,"column":10,"nodeType":"139","messageId":"140","endLine":9,"endColumn":21},{"ruleId":"137","severity":1,"message":"147","line":6,"column":31,"nodeType":"139","messageId":"140","endLine":6,"endColumn":41},{"ruleId":"137","severity":1,"message":"148","line":10,"column":10,"nodeType":"139","messageId":"140","endLine":10,"endColumn":21},{"ruleId":"142","severity":1,"message":"149","line":55,"column":8,"nodeType":"150","endLine":55,"endColumn":16,"suggestions":"151"},{"ruleId":"137","severity":1,"message":"152","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":18},{"ruleId":"137","severity":1,"message":"145","line":13,"column":11,"nodeType":"139","messageId":"140","endLine":13,"endColumn":15},{"ruleId":"137","severity":1,"message":"153","line":13,"column":29,"nodeType":"139","messageId":"140","endLine":13,"endColumn":34},{"ruleId":"137","severity":1,"message":"154","line":13,"column":36,"nodeType":"139","messageId":"140","endLine":13,"endColumn":44},{"ruleId":"137","severity":1,"message":"147","line":6,"column":10,"nodeType":"139","messageId":"140","endLine":6,"endColumn":20},{"ruleId":"137","severity":1,"message":"148","line":7,"column":10,"nodeType":"139","messageId":"140","endLine":7,"endColumn":21},{"ruleId":"142","severity":1,"message":"149","line":83,"column":8,"nodeType":"150","endLine":83,"endColumn":19,"suggestions":"155"},{"ruleId":"142","severity":1,"message":"149","line":96,"column":8,"nodeType":"150","endLine":96,"endColumn":10,"suggestions":"156"},{"ruleId":"142","severity":1,"message":"149","line":104,"column":8,"nodeType":"150","endLine":104,"endColumn":14,"suggestions":"157"},{"ruleId":"142","severity":1,"message":"149","line":110,"column":8,"nodeType":"150","endLine":110,"endColumn":37,"suggestions":"158"},{"ruleId":"142","severity":1,"message":"149","line":127,"column":7,"nodeType":"150","endLine":127,"endColumn":20,"suggestions":"159"},{"ruleId":"137","severity":1,"message":"160","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"137","severity":1,"message":"147","line":4,"column":31,"nodeType":"139","messageId":"140","endLine":4,"endColumn":41},{"ruleId":"137","severity":1,"message":"148","line":7,"column":10,"nodeType":"139","messageId":"140","endLine":7,"endColumn":21},{"ruleId":"142","severity":1,"message":"161","line":54,"column":8,"nodeType":"150","endLine":54,"endColumn":26,"suggestions":"162"},{"ruleId":"137","severity":1,"message":"147","line":5,"column":38,"nodeType":"139","messageId":"140","endLine":5,"endColumn":48},{"ruleId":"137","severity":1,"message":"148","line":6,"column":10,"nodeType":"139","messageId":"140","endLine":6,"endColumn":21},{"ruleId":"137","severity":1,"message":"163","line":10,"column":11,"nodeType":"139","messageId":"140","endLine":10,"endColumn":13},{"ruleId":"137","severity":1,"message":"164","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":19},{"ruleId":"142","severity":1,"message":"165","line":43,"column":8,"nodeType":"150","endLine":43,"endColumn":30,"suggestions":"166"},{"ruleId":"137","severity":1,"message":"148","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":21},{"ruleId":"137","severity":1,"message":"147","line":5,"column":31,"nodeType":"139","messageId":"140","endLine":5,"endColumn":41},{"ruleId":"137","severity":1,"message":"148","line":7,"column":10,"nodeType":"139","messageId":"140","endLine":7,"endColumn":21},{"ruleId":"142","severity":1,"message":"167","line":49,"column":8,"nodeType":"150","endLine":49,"endColumn":10,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'User' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","React Hook useEffect has a missing dependency: 'isLoggedin'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'loginCall' is defined but never used.","'error' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["172"],["173"],["174"],["175"],["176"],"'Online' is defined but never used.","React Hook useEffect has a missing dependency: 'user?._id'. Either include it or remove the dependency array.",["177"],"'PF' is assigned a value but never used.","'CloseFriend' is defined but never used.","React Hook useEffect has a missing dependency: 'onlineFriends'. Either include it or remove the dependency array. You can also do a functional update 'setonlineFriends(o => ...)' if you only need 'onlineFriends' in the 'setonlineFriends' call.",["178"],"React Hook useEffect has a missing dependency: 'post.userId'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [isLoggedin, params]",{"range":"198","text":"199"},"Update the dependencies array to be: [isLoggedin, user?._id]",{"range":"200","text":"201"},"Update the dependencies array to be: [isLoggedin]",{"range":"202","text":"203"},"Update the dependencies array to be: [isLoggedin, user]",{"range":"204","text":"205"},"Update the dependencies array to be: [arrivalMessage, currentChat, isLoggedin]",{"range":"206","text":"207"},"Update the dependencies array to be: [currentChat, isLoggedin]",{"range":"208","text":"209"},"Update the dependencies array to be: [currentuser._id, user?._id]",{"range":"210","text":"211"},"Update the dependencies array to be: [friends, onlineFriends, onlineusers]",{"range":"212","text":"213"},"Update the dependencies array to be: [post.userId]",{"range":"214","text":"215"},[1896,1904],"[isLoggedin, params]",[3115,3126],"[isLoggedin, user?._id]",[3486,3488],"[isLoggedin]",[3789,3795],"[isLoggedin, user]",[4008,4037],"[arrivalMessage, currentChat, isLoggedin]",[4505,4518],"[currentChat, isLoggedin]",[1901,1919],"[currentuser._id, user?._id]",[1379,1401],"[friends, onlineFriends, onlineusers]",[1754,1756],"[post.userId]"]