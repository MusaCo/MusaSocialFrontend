[{"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\index.js":"1","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\App.js":"2","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthContext.js":"3","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthReducer.js":"4","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\home\\Home.jsx":"5","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\profile\\Profile.jsx":"6","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\login\\Login.jsx":"7","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\messenger\\Messenger.jsx":"8","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\register\\Register.jsx":"9","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\apiCalls.js":"10","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\rightbar\\Rightbar.jsx":"11","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\Message\\Message.jsx":"12","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\feed\\Feed.jsx":"13","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\topbar\\Topbar.jsx":"14","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\sidebar\\Sidebar.jsx":"15","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\chatOnline\\ChatOnline.jsx":"16","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\conversation\\Conversation.jsx":"17","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\online\\Online.jsx":"18","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\share\\Share.jsx":"19","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\closefriend\\CloseFriend.jsx":"20","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\post\\Post.jsx":"21"},{"size":330,"mtime":1623594842541,"results":"22","hashOfConfig":"23"},{"size":1887,"mtime":1624198683670,"results":"24","hashOfConfig":"23"},{"size":1133,"mtime":1624113645717,"results":"25","hashOfConfig":"23"},{"size":1213,"mtime":1623594842540,"results":"26","hashOfConfig":"23"},{"size":1629,"mtime":1624198228816,"results":"27","hashOfConfig":"23"},{"size":3280,"mtime":1624195884345,"results":"28","hashOfConfig":"23"},{"size":2277,"mtime":1624198140478,"results":"29","hashOfConfig":"23"},{"size":6705,"mtime":1624130312546,"results":"30","hashOfConfig":"23"},{"size":2317,"mtime":1623594842547,"results":"31","hashOfConfig":"23"},{"size":366,"mtime":1623594842526,"results":"32","hashOfConfig":"23"},{"size":4623,"mtime":1624198427982,"results":"33","hashOfConfig":"23"},{"size":611,"mtime":1623594842527,"results":"34","hashOfConfig":"23"},{"size":1191,"mtime":1624198427982,"results":"35","hashOfConfig":"23"},{"size":2330,"mtime":1624198427982,"results":"36","hashOfConfig":"23"},{"size":2695,"mtime":1623684953994,"results":"37","hashOfConfig":"23"},{"size":1963,"mtime":1624116139945,"results":"38","hashOfConfig":"23"},{"size":1002,"mtime":1624115100184,"results":"39","hashOfConfig":"23"},{"size":610,"mtime":1623594842533,"results":"40","hashOfConfig":"23"},{"size":3557,"mtime":1624198427982,"results":"41","hashOfConfig":"23"},{"size":370,"mtime":1623594842529,"results":"42","hashOfConfig":"23"},{"size":2979,"mtime":1624198427982,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"hsyip8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\index.js",[],["97","98"],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\App.js",["99","100","101","102"],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthContext.js",["103"],"import { createContext, useReducer, useEffect } from \"react\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nconst INITIAL_STATE = {\r\n    // user: {\r\n    //   // id: \"60bf7a234e5fd0849c910b16\",\r\n    //   // username: \"musmaro\",\r\n    //   // email: \"musamusk22@gmail.com\",\r\n    //   // profilePicture: \"7.jpg\",\r\n    //   // coverPicture: \"tesla.jpg\",\r\n    //   // followers: [],\r\n    //   // followings: [],\r\n    // },\r\n    \r\n    user: null, //JSON.parse(localStorage.getItem(\"user\")) || null,\r\n    isFetching: false,\r\n    error: false,\r\n};\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE);\r\n\r\nexport const AuthContextProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n    \r\n    // useEffect(()=>{\r\n    //   localStorage.setItem(\"user\", JSON.stringify(state.user))\r\n    // },[state.user])\r\n\r\n    return (\r\n        <AuthContext.Provider \r\n          value={{\r\n            user: state.user,\r\n            isFetching: state.isFetching,\r\n            error:state.error,\r\n            dispatch,\r\n          }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\context\\AuthReducer.js",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\home\\Home.jsx",["104","105","106","107"],"import Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport \"./home.css\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Home() {\r\n    const [isLoggedin, setisLoggedin] = useState(true)\r\n    const{user, isFetching, error, dispatch} = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            dispatch({type: \"LOGIN_START\"});\r\n            try {\r\n                const res = await axios.get(\"https://musasocialapi.herokuapp.com/auth/login\");\r\n                if (res.data.Loggedin === true) {\r\n                    setisLoggedin(true)\r\n                    dispatch({type: \"LOGIN_SUCCESS\", payload: res.data.message});\r\n                }\r\n                else{\r\n                    setisLoggedin(false);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setisLoggedin(false);\r\n                dispatch({type: \"LOGIN_FAILURE\", payload: error});    \r\n             }\r\n            }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    if (!isLoggedin) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Topbar/>\r\n        <div className=\"homeContainer\">\r\n            <Sidebar/>\r\n            <Feed/>\r\n            <Rightbar/>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\profile\\Profile.jsx",["108","109"],"import \"./profile.css\"\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Rightbar from \"../../components/rightbar/Rightbar\";\r\nimport Feed from \"../../components/feed/Feed\";\r\nimport { useEffect, useState, useContext} from \"react\"\r\nimport  axios  from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Profile() {\r\n    const [user, setUser] = useState()\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const params = useParams().username;\r\n    const [isLoggedin, setisLoggedin] = useState(true)\r\n    const{dispatch} = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            dispatch({type: \"LOGIN_START\"});\r\n            try {\r\n                const res = await axios.get(\"/auth/login\");\r\n                if (res.data.Loggedin === true) {\r\n                    setisLoggedin(true)\r\n                    dispatch({type: \"LOGIN_SUCCESS\", payload: res.data.message});\r\n                }\r\n                else{\r\n                    setisLoggedin(false);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setisLoggedin(false);\r\n                dispatch({type: \"LOGIN_FAILURE\", payload: error});    \r\n             }\r\n            }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const fetchUser = async () =>{\r\n                const result = await axios.get(`/users?username=${params}`);\r\n                setUser(result.data)\r\n            };\r\n            fetchUser();\r\n        }\r\n    }, [params])\r\n\r\n    if (!isLoggedin) {\r\n        return  <Redirect to=\"/login\" />\r\n    }\r\n\r\n    if (user) {\r\n        return(\r\n            <>\r\n        <Topbar/>\r\n        <div className=\"profile\">\r\n            <Sidebar/>\r\n            <div className=\"profileRight\">\r\n                <div className=\"profileRightTop\">\r\n                    <div className=\"profileCover\">\r\n                        <img src={user.coverPicture? PF + user.coverPicture : PF + \"nopfp.jpg\"} alt=\"\" className=\"profileCoverImg\" />\r\n                        <img src={user.profilePicture? PF + user.profilePicture : PF + \"nopfp.jpg\"} alt=\"\" className=\"profileUserImg\" />\r\n                    </div>\r\n                    <div className=\"profileInfo\">\r\n                        <h4 className=\"profileInfoName\">{user?.username}</h4>\r\n                        <span className=\"profileInfoDesc\">{user?.desc}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profileRightBottom\">\r\n                    <Feed username={user?.username}/>\r\n                    <Rightbar user={user}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n        )\r\n        \r\n    } else {\r\n        return (\r\n                <div className=\"\">\r\n                    <Topbar/>\r\n                    <div className=\"usernotFoundParent\">\r\n                        <h4 className=\"usernotFound\">User Was Not Found!!</h4>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            )\r\n    }\r\n    \r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\login\\Login.jsx",["110","111","112"],"import { useContext, useRef } from \"react\"\r\nimport \"./login.css\"\r\nimport {loginCall} from \"../../apiCalls\"\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const email = useRef();\r\n    const password = useRef();\r\n    const{user, isFetching, error, dispatch} = useContext(AuthContext);\r\n    \r\n    const Submit = async (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: \"LOGIN_START\"});\r\n        try {\r\n            const res = await axios.post(\"https://musasocialapi.herokuapp.com/auth/login\", {email: email.current.value, password: password.current.value});\r\n            dispatch({type: \"LOGIN_SUCCESS\", payload: res.data});\r\n            history.push(\"/\")\r\n        \r\n        } catch (error) {\r\n            dispatch({type: \"LOGIN_FAILURE\", payload: error});\r\n            console.log(error)\r\n        }\r\n        // loginCall({email: email.current.value, password: password.current.value}, dispatch)\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"loginWrapper\">\r\n                <div className=\"loginLeft\">\r\n                    <h3 className=\"loginLogo\">MusaSocial</h3>\r\n                    <span className=\"loginDesc\">Connect with Friends That You Dont Have :)</span>\r\n                </div>\r\n                <div className=\"loginRight\">\r\n                    <form className=\"loginBox\" onSubmit={Submit}>\r\n                        <input placeholder=\"Email\" className=\"loginInput\" ref={email} required type=\"email\"/>\r\n                        <input placeholder=\"Password\" className=\"loginInput\" minLength=\"6\" ref={password} required type=\"password\"/>\r\n                        <button className=\"loginButton\" disabled={isFetching}>{isFetching? <CircularProgress color=\"white\"/> : \"Login\"}</button>\r\n                        <span className=\"loginForgot\">Forgot Password</span>\r\n                        <button className=\"loginRegisterButton\">{isFetching? <CircularProgress color=\"white\"/> : \"Create Account\"}</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\messenger\\Messenger.jsx",["113","114","115","116","117","118"],"import './messenger.css'\r\nimport Topbar from \"../../components/topbar/Topbar\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport { useContext, useState, useEffect, useRef } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport axios from \"axios\"\r\nimport { io } from \"socket.io-client\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Messenger() {\r\n    const [conversations, setconversations] = useState([])\r\n    const [currentChat, setcurrentChat] = useState(null)\r\n    const [newMessage, setnewMessage] = useState(null)\r\n    const [messages, setmessages] = useState(null)\r\n    const [arrivalMessage, setarrivalMessage] = useState(null)\r\n    const [onlineUsers, setonlineUsers] = useState([])\r\n    const Socket = useRef()\r\n    const scrollRef = useRef()\r\n    const [isLoggedin, setisLoggedin] = useState(true)\r\n    const{user, dispatch} = useContext(AuthContext);\r\n    \r\n    useEffect(() => {\r\n        const checkifLoggedin = async () =>{\r\n            dispatch({type: \"LOGIN_START\"});\r\n            try {\r\n                const res = await axios.get(\"/auth/login\");\r\n                if (res.data.Loggedin === true) {\r\n                    \r\n                    dispatch({type: \"LOGIN_SUCCESS\", payload: res.data.message});\r\n                    setisLoggedin(true)\r\n                }\r\n                else{\r\n                    setisLoggedin(false);\r\n                }\r\n            } \r\n            catch (error) {\r\n                setisLoggedin(false);\r\n                dispatch({type: \"LOGIN_FAILURE\", payload: error});    \r\n             }\r\n            }\r\n        checkifLoggedin();\r\n        \r\n    }, [])\r\n\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const getConversations = async () =>{\r\n                try {\r\n                    const res = await axios.get(\"/conversations/\" + user?._id)\r\n                    setconversations(res.data)\r\n                }\r\n                catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            getConversations();\r\n        }\r\n        \r\n    }, [user?._id])\r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            Socket.current = io(\"ws://localhost:8900\");\r\n            Socket.current.on(\"getMessage\", data => {\r\n            setarrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: Date.now(),\r\n            })\r\n        })\r\n        }\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            Socket.current.emit(\"addUser\", user?._id)\r\n            Socket.current.on(\"getUsers\", (users) => {setonlineUsers(user?.followings.filter((f) => users.some((u) => u.userId === f))); console.log(users)})\r\n        }\r\n        \r\n    }, [user])\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            arrivalMessage && currentChat?.members.includes(arrivalMessage.sender) && setmessages((prev) => [...prev, arrivalMessage])\r\n        }\r\n    }, [arrivalMessage, currentChat])\r\n\r\n    useEffect(() => {\r\n        if (isLoggedin) {\r\n            const getMessages = async () =>{\r\n                try {\r\n                    const res = await axios.get(\"/messages/\" + currentChat?._id)\r\n                    setmessages(res.data)\r\n                } \r\n                catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n            getMessages();\r\n        }\r\n        \r\n\r\n    },[currentChat])\r\n\r\n   \r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: user?._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id\r\n        }\r\n        \r\n        const receiverId = currentChat.members.find(member => member !== user?._id)\r\n        Socket.current.emit(\"sendMessage\", \r\n        {   \r\n            senderId: user?._id, \r\n            receiverId: receiverId, \r\n            text: newMessage\r\n        })\r\n        setnewMessage(\"\");\r\n        try {\r\n            const res = await axios.post(\"/messages\", message)\r\n            setmessages([...messages , res.data])\r\n        } \r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({behavior: \"smooth\"})\r\n    }, [messages])\r\n\r\n    if (!isLoggedin) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <Topbar/>\r\n        <div className=\"messenger\">\r\n            <div className=\"chatMenu\">\r\n                <div className=\"chatMenuWrapper\">\r\n                    <input placeholder=\"Search for Friends\" className=\"chatMenuInput\" />\r\n                    {\r\n                        conversations.map((c) => (\r\n                            <div className=\"\" onClick={() => setcurrentChat(c)}>\r\n                                <Conversation conversation={c} currentUser={user}/>\r\n                            </div>\r\n                            \r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"chatBox\">\r\n                <div className=\"chatBoxWrapper\">\r\n                    {\r\n                        currentChat?<><div className=\"chatBoxTop\">\r\n                            \r\n                        {\r\n                            messages.map((m) => (\r\n                                <div ref={scrollRef}>\r\n                                    <Message own={m?.sender === user?._id} message={m} />\r\n                                </div>\r\n                                \r\n                            ))\r\n                        }\r\n                        \r\n                    </div>\r\n                    <div className=\"chatBoxBottom\">\r\n                    <textarea placeholder=\"Write Something...\" className=\"chatMessageInput\" onChange={(e) => setnewMessage(e.target.value)} value={newMessage}></textarea>\r\n                    <button className=\"chatSubmitButton\" onClick={handleSubmit}>Send</button>\r\n                    </div>\r\n                    </>\r\n                    : <span className=\"noConversationText\">Open a Convo to start Chatting</span>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"chatOnline\">\r\n                <div className=\"chatOnlineWrapper\">\r\n                    <ChatOnline onlineusers={onlineUsers} currentId={user?._id} setcurrentChat={setcurrentChat}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\pages\\register\\Register.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\apiCalls.js",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\rightbar\\Rightbar.jsx",["119"],"import \"./rightbar.css\"\r\nimport Online from \"../online/Online\";\r\nimport  axios  from \"axios\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Add, Remove } from \"@material-ui/icons\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Rightbar({user}) {\r\n    const {user:currentuser, dispatch} = useContext(AuthContext)\r\n    const [Friends, setFriends] = useState([])\r\n    const [followed, setfollowed] = useState(currentuser?.followings?.includes(user?._id))\r\n\r\n    useEffect(() => {\r\n        setfollowed(currentuser?.followings?.includes(user?._id));\r\n    }, [currentuser, user?._id])\r\n\r\n    useEffect(() => {\r\n        const fetchFriends = async () => {\r\n            try {\r\n                const friends = await axios.get(`https://musasocialapi.herokuapp.com/users/friends/${user?._id}`);\r\n                setFriends(friends.data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchFriends();\r\n        \r\n    }, [user?._id])\r\n    const handleClick = async () =>{\r\n        try {\r\n            if (followed) {\r\n                await axios.put(\"https://musasocialapi.herokuapp.com/users/\" + user._id + \"/unfollow\", {userId: currentuser?._id});\r\n                dispatch({type: \"UNFOLLOW\", payload: user._id});\r\n            } \r\n            else {\r\n                await axios.put(\"https://musasocialapi.herokuapp.com/users/\" + user._id + \"/follow\", {userId: currentuser?._id});\r\n                dispatch({type: \"FOLLOW\", payload: user._id});\r\n                \r\n            }\r\n            setfollowed(!followed);\r\n        } \r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const Home = () =>{\r\n        return(\r\n            <>\r\n            <div className=\"birthdayContainer\">\r\n                    <img src=\"/assets/birthday.png\" alt=\"\" className=\"birthdayImg\" />\r\n                    <span className=\"birthdayText\">\r\n                        <b>Ahmed Adil</b> and <b>7 other Friends</b> have a birthday today\r\n                    </span>\r\n                </div>\r\n                <img src=\"/assets/tesla.jpg\" alt=\"\" className=\"rightbarAd\" />\r\n                <h4 className=\"rightbarTitle\">Online Friends</h4>\r\n                <ul className=\"rightbarFriendList\">\r\n                    {/* online componentr here */}\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const ProfileRightbar = () =>{\r\n        return(\r\n            <>\r\n            {currentuser?.username !== user?.username &&(\r\n                <button className=\"rightbarFollowButton\" onClick={handleClick}>\r\n                    {followed? \"Unfollow\": \"Follow\"}\r\n                    {followed? <Remove/>: <Add/>}\r\n                </button>\r\n            )}\r\n            <h4 className=\"rightbarTitle\">User Information</h4>\r\n            <div className=\"rightbarInfo\">\r\n                <div className=\"rightbarInfoItem\">\r\n                    <span className=\"rightbarInfoKey\">From:</span>\r\n                    <span className=\"rightbarInfoValue\">{user.from}</span>\r\n                </div>\r\n                <div className=\"rightbarInfoItem\">\r\n                    <span className=\"rightbarInfoKey\">Live:</span>\r\n                    <span className=\"rightbarInfoValue\">{user.city}</span>\r\n                </div>\r\n                <div className=\"rightbarInfoItem\">\r\n                    <span className=\"rightbarInfoKey\">Relationship:</span>\r\n                    <span className=\"rightbarInfoValue\">{user.relationship}</span>\r\n                </div>\r\n            </div>\r\n            <h4 className=\"rightbarTitle\">User Friends</h4>\r\n            <div className=\"rightbarFollowings\">\r\n                {\r\n                    Friends.map((friend) => (\r\n                        <Link to={\"/profile/\" + friend.username} style={{textDecoration: \"none\"}}>\r\n                            <div className=\"rightbarFollowing\">\r\n                                <img src={PF + friend.profilePicture} alt=\"\" className=\"rightbarFollowingImg\" />\r\n                                <span className=\"rightbarFollowingName\">{friend?.username}</span>\r\n                            </div>\r\n                        </Link>\r\n                        \r\n                    ))\r\n                }\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"rightbar\">\r\n            <div className=\"rightbarWrapper\">\r\n                {user ? <ProfileRightbar/> : <Home/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\Message\\Message.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\feed\\Feed.jsx",["120"],"import \"./feed.css\"\r\nimport Share from \"../share/Share\";\r\nimport Post from \"../post/Post\";\r\nimport  axios  from \"axios\";\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Feed({username}) {\r\n    const {user} = useContext(AuthContext)\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\nconst [posts, SetPosts] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchPosts = async () =>{\r\n            const result = username? await axios.get(`https://musasocialapi.herokuapp.com/post/profile/${username}`) : await axios.get(`/post/timeline/${user?._id}`)\r\n            SetPosts(result.data.sort((p1, p2) =>{\r\n                return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n            }));\r\n        };\r\n        fetchPosts();\r\n    }, [username, user?._id])\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feedWrapper\">\r\n                {(!username || username === user.username) &&<Share/>}\r\n                {posts.map(p=> (\r\n                    <Post key={p._id} post={p}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\topbar\\Topbar.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\sidebar\\Sidebar.jsx",["121"],"import \"./sidebar.css\"\r\nimport { RssFeed, Chat, PlayCircleFilledOutlined, Group, Bookmark, HelpOutline, WorkOutline, Event, School } from \"@material-ui/icons\";\r\nimport CloseFriend from \"../closefriend/CloseFriend\";\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebarWrapper\">\r\n                <ul className=\"sidebarList\">\r\n                    <li className=\"sidebarListItem\">\r\n                        <RssFeed className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Feed</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Chat className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Chats</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <PlayCircleFilledOutlined className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Video</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Group className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Groups</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Bookmark className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">BookMarks</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <HelpOutline className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Questions</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <WorkOutline className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Jobs</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <Event className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Events</span>\r\n                    </li>\r\n                    <li className=\"sidebarListItem\">\r\n                        <School className=\"sidebarIcon\"/>\r\n                        <span className=\"sidebarListItemText\">Courses</span>\r\n                    </li>\r\n                </ul>\r\n                <button className=\"sidebarButton\">Show More</button>\r\n                <hr className=\"sidebarHr\" />\r\n                <ul className=\"sidebarFriendList\">\r\n                    {/* close friends component here */}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\chatOnline\\ChatOnline.jsx",["122"],"import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./chatonline.css\"\r\n\r\nexport default function ChatOnline({onlineusers, currentId, setcurrentChat}) {\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const [friends, setfriends] = useState(null)\r\n    const [onlineFriends, setonlineFriends] = useState([])\r\n    useEffect(() => {\r\n        const getFriends = async () =>{\r\n            try {\r\n                const res = await axios.get(\"/users/friends/\" + currentId)\r\n                setfriends(res.data)\r\n            } \r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getFriends();\r\n        \r\n    }, [currentId])\r\n\r\n    const handleClick = async (userr) => {\r\n        try {\r\n            const res = await axios.get(`/conversations/find/${currentId}/${userr._id}`)\r\n            console.log(res)\r\n            setcurrentChat(res.data)\r\n        } \r\n        catch (error) {\r\n           console.log(error) \r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setonlineFriends([]);\r\n        for (let index = 0; index < onlineusers?.length; index++) {\r\n            for (let i = 0; i < friends?.length; i++) {\r\n                if (onlineusers[index] === friends[i]._id) {\r\n                    setonlineFriends([...onlineFriends, friends[i]])\r\n                }\r\n            }\r\n        }\r\n    }, [friends, onlineusers])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"chatOnline\">\r\n            {onlineFriends?.map((use) => (\r\n                <div className=\"chatOnlineFriend\" onClick={() => handleClick(use)}>\r\n                <div className=\"chatOnlineImgContainer\">\r\n                    <img className=\"chatOnlineImg\" src={PF + use?.profilePicture} alt=\"\" />\r\n                    <div className=\"chatOnlineBadge\"></div>\r\n                </div>\r\n                <span className=\"chatOnlineName\">{use?.username}</span>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\conversation\\Conversation.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\online\\Online.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\share\\Share.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\closefriend\\CloseFriend.jsx",[],"C:\\Users\\musli\\Desktop\\mern MusaSocial\\React\\src\\components\\post\\Post.jsx",["123"],"import \"./post.css\"\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport  axios  from \"axios\";\r\nimport { format } from \"timeago.js\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Post({post}) {\r\n    const {user:currentuser} = useContext(AuthContext)\r\n    const [user, setUser] = useState({})\r\n    const [like, setLike] = useState(post.likes.length)\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    \r\n    useEffect(() =>{\r\n        setIsLiked(post.likes.includes(currentuser._id));\r\n    }, [currentuser?._id, post.likes]);\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () =>{\r\n            const result = await axios.get(`https://musasocialapi.herokuapp.com/users?userId=${post.userId}`);\r\n            setUser(result.data)\r\n            \r\n        };\r\n        fetchUser();\r\n    }, []);\r\n\r\n    const likeHandler = () =>{\r\n        try {\r\n            axios.put(\"https://musasocialapi.herokuapp.com/post/\" + post._id + \"/like\", {userId: currentuser._id})\r\n            console.log(\"post liked........\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        setLike(isLiked ? like - 1 : like + 1)\r\n        setIsLiked(!isLiked)\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"postWrapper\">\r\n                <div className=\"postTop\"> \r\n                    <div className=\"postTopLeft\">\r\n                    <Link to={`profile/${user?.username}`}>\r\n                        <img src={ user.profilePicture? PF + user?.profilePicture : PF+\"nopfp.png\"} alt=\"\" className=\"postProfileImg\" />\r\n                    </Link>\r\n                        <span className=\"postUsername\">{user?.username}</span>\r\n                        <span className=\"postDate\">{format(post.createdAt)}</span>\r\n                    </div>\r\n                    <div className=\"postTopRight\">\r\n                        <MoreVert/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"postCenter\">\r\n                    <span className=\"postText\">{post?.desc}</span>\r\n                    <img src={PF+post.img} alt=\"\" className=\"postImg\" />\r\n                </div>\r\n                <div className=\"postBottom\">\r\n                    <div className=\"postBottomLeft\">\r\n                        <img src=  {PF + \"like.png\"}  alt=\"\" className=\"likeIcon\" onClick={likeHandler}/>\r\n                        <img src={PF + \"heart1.png\"} alt=\"\" className=\"likeIcon\" onClick={likeHandler}/>\r\n                        <span className=\"postLikeCounter\">{like}</span>\r\n                    </div>\r\n                    <div className=\"postBottomRight\">\r\n                        <span className=\"postCommentText\">{post.comment} Comments</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":12,"column":3,"nodeType":"130","messageId":"131","endLine":12,"endColumn":11},{"ruleId":"128","severity":1,"message":"132","line":20,"column":10,"nodeType":"130","messageId":"131","endLine":20,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":22,"column":13,"nodeType":"135","endLine":25,"endColumn":4},{"ruleId":"128","severity":1,"message":"136","line":27,"column":10,"nodeType":"130","messageId":"131","endLine":27,"endColumn":14},{"ruleId":"128","severity":1,"message":"137","line":1,"column":37,"nodeType":"130","messageId":"131","endLine":1,"endColumn":46},{"ruleId":"128","severity":1,"message":"136","line":13,"column":11,"nodeType":"130","messageId":"131","endLine":13,"endColumn":15},{"ruleId":"128","severity":1,"message":"138","line":13,"column":17,"nodeType":"130","messageId":"131","endLine":13,"endColumn":27},{"ruleId":"128","severity":1,"message":"139","line":13,"column":29,"nodeType":"130","messageId":"131","endLine":13,"endColumn":34},{"ruleId":"133","severity":1,"message":"140","line":35,"column":8,"nodeType":"141","endLine":35,"endColumn":10,"suggestions":"142"},{"ruleId":"133","severity":1,"message":"140","line":39,"column":8,"nodeType":"141","endLine":39,"endColumn":10,"suggestions":"143"},{"ruleId":"133","severity":1,"message":"144","line":51,"column":8,"nodeType":"141","endLine":51,"endColumn":16,"suggestions":"145"},{"ruleId":"128","severity":1,"message":"146","line":3,"column":9,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"128","severity":1,"message":"136","line":13,"column":11,"nodeType":"130","messageId":"131","endLine":13,"endColumn":15},{"ruleId":"128","severity":1,"message":"139","line":13,"column":29,"nodeType":"130","messageId":"131","endLine":13,"endColumn":34},{"ruleId":"133","severity":1,"message":"140","line":45,"column":8,"nodeType":"141","endLine":45,"endColumn":10,"suggestions":"147"},{"ruleId":"133","severity":1,"message":"144","line":62,"column":8,"nodeType":"141","endLine":62,"endColumn":19,"suggestions":"148"},{"ruleId":"133","severity":1,"message":"144","line":75,"column":8,"nodeType":"141","endLine":75,"endColumn":10,"suggestions":"149"},{"ruleId":"133","severity":1,"message":"144","line":83,"column":8,"nodeType":"141","endLine":83,"endColumn":14,"suggestions":"150"},{"ruleId":"133","severity":1,"message":"144","line":89,"column":8,"nodeType":"141","endLine":89,"endColumn":37,"suggestions":"151"},{"ruleId":"133","severity":1,"message":"144","line":106,"column":7,"nodeType":"141","endLine":106,"endColumn":20,"suggestions":"152"},{"ruleId":"128","severity":1,"message":"153","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"154","line":10,"column":11,"nodeType":"130","messageId":"131","endLine":10,"endColumn":13},{"ruleId":"128","severity":1,"message":"155","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":19},{"ruleId":"133","severity":1,"message":"156","line":43,"column":8,"nodeType":"141","endLine":43,"endColumn":30,"suggestions":"157"},{"ruleId":"133","severity":1,"message":"158","line":27,"column":8,"nodeType":"141","endLine":27,"endColumn":10,"suggestions":"159"},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'User' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'isFetching' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["162"],["163"],"React Hook useEffect has a missing dependency: 'isLoggedin'. Either include it or remove the dependency array.",["164"],"'loginCall' is defined but never used.",["165"],["166"],["167"],["168"],["169"],["170"],"'Online' is defined but never used.","'PF' is assigned a value but never used.","'CloseFriend' is defined but never used.","React Hook useEffect has a missing dependency: 'onlineFriends'. Either include it or remove the dependency array. You can also do a functional update 'setonlineFriends(o => ...)' if you only need 'onlineFriends' in the 'setonlineFriends' call.",["171"],"React Hook useEffect has a missing dependency: 'post.userId'. Either include it or remove the dependency array.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},{"desc":"176","fix":"177"},{"desc":"173","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [dispatch]",{"range":"193","text":"194"},{"range":"195","text":"194"},"Update the dependencies array to be: [isLoggedin, params]",{"range":"196","text":"197"},{"range":"198","text":"194"},"Update the dependencies array to be: [isLoggedin, user?._id]",{"range":"199","text":"200"},"Update the dependencies array to be: [isLoggedin]",{"range":"201","text":"202"},"Update the dependencies array to be: [isLoggedin, user]",{"range":"203","text":"204"},"Update the dependencies array to be: [arrivalMessage, currentChat, isLoggedin]",{"range":"205","text":"206"},"Update the dependencies array to be: [currentChat, isLoggedin]",{"range":"207","text":"208"},"Update the dependencies array to be: [friends, onlineFriends, onlineusers]",{"range":"209","text":"210"},"Update the dependencies array to be: [post.userId]",{"range":"211","text":"212"},[1343,1345],"[dispatch]",[1466,1468],[1751,1759],"[isLoggedin, params]",[1804,1806],[2256,2267],"[isLoggedin, user?._id]",[2627,2629],"[isLoggedin]",[2930,2936],"[isLoggedin, user]",[3149,3178],"[arrivalMessage, currentChat, isLoggedin]",[3611,3624],"[currentChat, isLoggedin]",[1379,1401],"[friends, onlineFriends, onlineusers]",[990,992],"[post.userId]"]